{"version":3,"sources":["assets/icons/category.svg","assets/icons/about.svg","assets/icons/user.svg","assets/icons/delivery.svg","assets/icons/package.svg","assets/icons/radish.svg","assets/icons/information.svg","assets/icons/search.svg","assets/icons/badStatus.svg","assets/icons/goodStatus.svg","assets/icons/delete.svg","assets/icons/back.svg","assets/icons/checkPassword.svg","assets/icons/plus.svg","assets/icons/openList.svg","assets/icons/Rolling-0.6s-197px.svg","assets/icons/Rolling-0.6s-197px2.svg","assets/active_icons/category_active.svg","assets/active_icons/provider_active.svg","assets/active_icons/product_active.svg","assets/active_icons/user_active.svg","assets/active_icons/quest_active.svg","assets/active_icons/about_active.svg","assets/active_icons/order_active.svg","assets/active_icons/settings_active.svg","assets/icons/settings.svg","assets/img/logo.svg","assets/img/loader-logo.svg","assets/icons/error.svg","assets/icons/upload-button.svg","assets/icons/edit.svg","assets/icons/trash.svg","assets/icons/leftArrow.svg","redux/reducers/types.js","utils/api/Request.js","utils/templates/getTemplate.jsx","utils/templates/createOrChangeTemplate.js","utils/templates/deleteTemplate.js","utils/checkHasData.js","utils/templates/getSearchedTemplate.js","utils/templates/updateItemInStore.js","components/Auth/logout.js","redux/reducers/mainReducer.js","redux/reducers/orderReducer.js","components/Auth/expChecker.js","components/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Sidebar/SidebarItem.jsx","components/Sidebar/sideBarConfig.js","components/Sidebar/SidebarList.jsx","components/Search-panel/SearchPanel.jsx","components/Btns/AddBtn.jsx","redux/reducers/modalReducer.jsx","redux/reducers/tableReducer.js","components/Btns/DeleteBtn.jsx","components/Table/TableItemColumn.jsx","utils/toBeatifyFiledsValue.js","components/Table/Table-item.jsx","components/Modals/ErrorMessage.jsx","components/Table/Table.jsx","components/RecordViewer/RecordViewer.jsx","components/RecordViewer/RecordViewerContainer.jsx","components/Btns/EditBtn.jsx","components/Btns/CancelBtn.jsx","components/Inputs/SelectorInput/SelectorItem.jsx","components/Inputs/SelectorInput/SelectorList.jsx","components/Inputs/SelectorInput/Selector.js","components/Inputs/SelectorInput/SelectorInput.jsx","utils/toUglyfyFieldsValue.js","components/ImgUploader/ImgUploader.jsx","components/Inputs/PhoneInput/PhoneInput.jsx","components/Inputs/CheckInput/CheckInput.jsx","components/Inputs/Selector/SelectItem.js","components/Inputs/Selector/SelectBlock.js","components/Inputs/Selector/SelectField.jsx","components/Inputs/MapBlock/MapBlock.jsx","components/FormGenerator/FormInput.jsx","components/FormGenerator/Former.jsx","components/FormGenerator/validationGenerator.js","components/FormGenerator/FormContainer.jsx","components/PageRenderer/PageRendererContainer.jsx","configs/Orders/tableColumnsConfig.js","configs/Orders/recordViewConfig.js","configs/Orders/inputFormConfig.js","pages/Orders/OrdersPage.jsx","redux/reducers/userReducer.js","configs/Users/tableColumnsConfig.js","configs/Users/recordViewConfig.js","pages/Users/UsersPage.jsx","configs/Products/tableColumnsConfig.js","configs/Products/recordViewConfig.js","configs/Products/inputFormConfig.js","utils/templates/toClearImageArray.js","redux/reducers/productReducer.js","utils/templates/formDataTemplate.js","redux/reducers/providerReducer.js","redux/reducers/categoryReducer.js","pages/Products/ProductsPage.jsx","configs/Providers/inputFormConfig.js","configs/Providers/tableColumnsConfig.js","configs/Providers/recordViewConfig.js","pages/Providers/ProvidersPage.jsx","components/Inputs/PasswordInput/PasswordInput.jsx","components/Auth/AuthForm.jsx","components/Auth/AuthContainer.jsx","pages/Auth/AuthPage.jsx","configs/Categories/recordViewConfig.js","configs/Categories/tableColumnsConfig.js","configs/Categories/inputFormConfig.js","pages/Categories/CategoriesPage.jsx","components/Modals/Modal.jsx","components/Profile/ProfileForm.jsx","components/Profile/ProfileContainer.jsx","pages/Profile/ProfilePage.jsx","redux/reducers/faqReducer.jsx","components/pageLoader/pageLoader.js","configs/Faq/inputFormConfig.js","configs/Faq/tableColumnsConfig.js","configs/Faq/recordViewConfig.js","pages/Faq/FaqPage.js","redux/reducers/aboutUsReducer.js","configs/AboutUs/inputFormConfig.js","configs/AboutUs/tableColumnsConfig.js","configs/AboutUs/recordViewConfig.js","pages/AboutUs/AboutUsPage.js","configs/Settings/inputFormConfig.js","pages/Settings/SettingsPage.js","components/Notification/Notification.js","App.jsx","components/Auth/tokensChecker.js","redux/reducers/index.jsx","redux/store.jsx","index.jsx"],"names":["module","exports","SEARCHING","tokenGetter","headers","localStorage","getItem","instance","axios","baseURL","authReq","data","post","then","response","authRefreshReq","categoryGetByIdReq","id","get","categoryPostReq","categoryDelByIdReq","delete","categoryUpdReq","put","categoryGetSearchReq","searchText","page","productsGetReq","productGetByIdReq","productPostReq","productDelByIdReq","productUpdReq","productImgPostReq","measureUnitGetReq","providersGetReq","providerGetByIdReq","providerPostReq","providerImgPostReq","providerDelByIdReq","providerUpdReq","providerActiveGetReq","providerPlaceOfProductionPostReq","providerPlaceOfProductionUpdReq","usersGetReq","userGetByIdReq","userDelByIdReq","userUpdReq","ordersGetReq","orderGetByIdReq","orderPostReq","orderDelByIdReq","orderUpdStatusReq","deliveryCashGetReq","deliveryCashUpdReq","faqGetReq","faqGetByIdReq","faqPostReq","faqDelByIdReq","faqUpdReq","aboutUsGetReq","aboutUsGetByIdReq","aboutUsPostReq","aboutUsDelByIdReq","aboutUsUpdReq","getTemplate","dispatch","getFunc","actionType","toggleLoader","a","showNotification","catch","isOpen","title","body","result","type","payload","createOrChangeTemplate","func","notifObj","resultCode","deleteTemplate","deleteFunc","checkHasData","length","getSearchedTemplate","updateItemInStore","state","idx","newArrayData","findIndex","item","parseInt","slice","logout","removeItem","initialState","authFetchLoader","isAuthorized","isPageLoader","authErrorMessage","username","userId","undefined","notification","toggleNotification","notif","writeAuthMessage","str","togglePageLoader","bool","toggleAuth","value","getUserName","firstName","phoneNumber","tokenToLocalStorage","setItem","accessToken","JSON","stringify","Date","parse","tokenExpirationTime","refreshExpirationTime","refreshToken","orders","orderById","deliveryCash","hasOrders","orderFetchLoader","orderToggleLoader","expChecker","exp","now","isExpired","token","getExpirationDate","Preloader","props","className","style","width","height","connect","main","writeUserId","useEffect","to","src","logoSVG","alt","onClick","withRouter","name","svg","activeSvg","history","useState","clicked","setClick","location","pathname","indexOf","classes","classNames","push","sideBarConfig","providerSVG","providerActiveSVG","orderSVG","orderActiveSVG","productSVG","productActiveSVG","userSVG","userActiveSVG","categorySVG","categoryActiveSVG","questionSVG","questionActiveSVG","aboutSVG","aboutActiveSVG","settingsSVG","settingsActiveSVG","elements","map","index","key","SearchPanel","searchSVG","placeholder","onChange","event","handleSearchText","target","AddBtn","urlToCreate","isOpenModal","confirmFunc","urlToTable","toggleModal","obj","recordViewId","elementsToDelete","tableMessage","writeTableMessage","table","confirmHandler","deleteSVG","TableItemColumn","column","render","toBeautifyFieldsValue","NaN","writeElementsToDelete","values","columns","handlerClick","deleting","check","setCheck","buff","splice","boxShadow","valuesToArray","Object","valsKey","keys","i","j","dataIndex","object","tableItemColumn","ErrorMsg","text","errorSVG","isLoading","getDataFunc","adding","hasData","clearTable","setSearchText","setPage","useDispatch","timeoutId","setTimeout","clearTimeout","dataLength","next","hasMore","loader","endMessage","textAlign","initialScrollY","titles","urlToUpd","match","editing","recordViewValuesConfig","backSVG","results","Array","isArray","valueChooser","params","array","fieldSearcherInObj","searchedField","prop","valueById","clearFunc","getByIdFunc","disabled","SelectorItem","isOpenList","setOpenList","handleClick","thirdStyle","checked","setChecked","styles","children","openList","SelectorList","Selector","setVisibleSelector","selectorRef","useRef","closeSelector","e","current","contains","document","addEventListener","removeEventListener","ref","SelectorInput","setFieldValue","visibleSelector","selected","setSelected","inputText","setInputText","toUglyfyFieldsValue","plusSVG","ImgUploader","imageCount","fileTypes","files","setFiles","error","setError","createFile","url","fetch","imageUrl","imgUrl","blob","metadata","getBase64","file","File","string","data_url","loadFiles","callback","reader","FileReader","readAsDataURL","useDropzone","accept","onDrop","acceptedFiles","split","getRootProps","getInputProps","thumbs","trashSVG","deleteItem","Url","toUpperCase","uploadBtnSVG","PhoneInput","mask","replace","CheckInput","marginTop","defaultChecked","SelectItem","fullName","SelectBlock","SelectField","selectedValue","setSelectedValue","readOnly","MapBlock","ymaps","React","placemarkRef","mapRef","city","country","region","street","place","setPlace","address","setAddress","enterprise","query","apikey","modules","instanceRef","onLoad","ympasInstance","coords","geometry","setCoordinates","Placemark","iconCaption","preset","draggable","createPlacemark","geoObjects","add","properties","set","geocode","res","firstGeoObject","getAddressLine","getLocalities","getCountry","getAdministrativeAreas","getThoroughfare","balloonContent","getAddress","defaultState","center","zoom","position","options","float","FormInput","label","selectInputData","selectorProperty","clearSelectorData","htmlFor","field","form","as","Former","inputs","initialVals","inputConfig","optionsForSelector","readonly","schema","config","dataType","Yup","required","min","max","nullable","validationGenerator","formTitle","initialValues","validationSchema","onSubmit","handleSubmit","errors","createReq","updReq","loadSelectorData","console","log","path","pageUrl","pageTitle","tableData","tableColumnsConfig","recordViewTitlesConfig","creatorTitle","updaterTitle","formInputsConfig","optionsForSelectorData","creatorInitialFormValues","updaterInitialFormValues","createFunc","updateFunc","exact","OrderColumns","background","color","borderRadius","padding","margin","recordViewOrderConfig","orderInputConfig","order","clearOrder","action","getOrderById","createOrder","deleteOrder","getOrders","updateOrder","orderStatus","clearOrders","orderNumber","client","lastName","deliveryAddress","deliveryType","desiredDeliveryDate","elsomPaymentOrderStatus","paymentType","storageAddress","product","products","amount","measureUnitResponse","totalPrice","currency","orderTotalPrice","status","users","userById","hasUsers","userFetchLoader","userToggleLoader","getUserById","UsersColumns","recordViewUserConfig","user","getUsers","deleteUser","clearUser","clearUsers","ProductColumns","recordViewProductConfig","productInputConfig","toClearImageArray","productById","ratingById","hasProducts","measureUnits","productFetchLoader","productToggleLoader","formDataProviderTemplate","formData","FormData","append","providers","providerById","activeProviders","hasProvider","providerFetchLoader","providerToggleLoader","categories","categoryById","searchedCategories","hasCategories","categoryFetchLoader","clearCategories","categoryToggleLoader","getCategory","category","provider","getActiveProviders","getProducts","getProductById","createProduct","resp","images","updateProduct","deleteProduct","clearProduct","getMeasureUnits","clearProducts","clearActiveProviders","units","supplier","description","price","measure","productImages","boughtCount","raiting","comments","comment","middleName","email","categoryId","supplierId","measureUnitId","providerInputConfig","ProviderColumns","goodStatusSVG","badStatusSVG","recordViewProviderConfig","getProviders","getProviderById","createProvider","placeOfProduction","newData","PASSPORT","SERTIFICATE","CONTRACT","updateProvider","deleteProvider","clearProvider","clearProviders","phone","produces","walletNumber","ewalletNumber","supplierFile","filter","supplierFileType","isActive","PasswordInput","visiblePassword","setVisiblePassword","checkPasSVG","password","submitHandler","authSignIn","statusCodeValue","AuthPage","recordViewCategoryConfig","CategoryColumns","categoryInputConfig","getCategoryById","createCategory","Blob","parentCategoryId","image","updateCategory","deleteCategory","clearCategory","getSearchedCategory","parentCategory","imagePath","isFetchLoader","modal","ProfileForm","urlToBack","profile","updateUser","ProfilePage","loaderLogoSVG","faq","faqById","hasFaq","faqFetchLoader","faqToggleLoader","faqInputConfig","FaqColumns","recordViewFaqConfig","getFaq","getFaqById","createFaq","updateFaq","deleteFaq","clearFaq","clearFaqs","question","answer","aboutUs","aboutUsById","hasAbout","aboutFetchLoader","aboutToggleLoader","aboutUsInputConfig","AboutUsColumns","recordViewAboutUsConfig","getAboutUs","getAboutUsById","createAboutUs","updateAboutUs","deleteAboutUs","clearAboutUs","clearAboutUses","header","paragraph","settingsInputConfig","updateDeliveryCash","deliveryPrice","getDeliveryCash","open","message","visible","authRefresh","tokensChecker","component","OrdersPage","UsersPage","ProductsPage","CategoriesPage","ProvidersPage","FaqPage","AboutUsPage","SettingsPage","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ab7d50cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/category.6fb1c99f.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.aa636394.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6254b518.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.d6b82ec3.svg\";","module.exports = __webpack_public_path__ + \"static/media/package.4f531e3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/radish.8f2f758d.svg\";","module.exports = __webpack_public_path__ + \"static/media/information.aaab1020.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.4fe23475.svg\";","module.exports = __webpack_public_path__ + \"static/media/badStatus.a3728383.svg\";","module.exports = __webpack_public_path__ + \"static/media/goodStatus.59610b8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.03ad081f.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.dbbc4fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkPassword.daa811a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.26de1661.svg\";","module.exports = __webpack_public_path__ + \"static/media/openList.1e941aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px.1a1f3581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px2.a0c4e4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/category_active.006e9b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/provider_active.d827fc4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_active.844c787a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user_active.414bdbc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/quest_active.fdfd211b.svg\";","module.exports = __webpack_public_path__ + \"static/media/about_active.a58d305c.svg\";","module.exports = __webpack_public_path__ + \"static/media/order_active.688d21b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_active.49551fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.6f4b4b52.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.207a7640.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-logo.f79cb380.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.020896e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-button.70e2dfbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.d1ec101b.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.b8c498a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.addc9207.svg\";","\r\n\r\nexport const WRITE_RECORD_ID = 'WRITE_RECORD_ID'\r\nexport const WRITE_ELEMENTS_TO_DELETE = 'WRITE_ELEMENTS_TO_DELETE'\r\nexport const WRITE_TABLE_MESSAGE = 'WRITE_TABLE_MESSAGE'\r\nexport const SEARCHING='SEARCHING'\r\n\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\nexport const TOGGLE_FETCH_LOADER = 'TOGGLE_FETCH_LOADER'\r\nexport const TOGGLE_PAGE_LOADER = 'TOGGLE_PAGE_LOADER'\r\nexport const WRITE_AUTH_MESSAGE = 'WRITE_AUTH_MESSAGE'\r\nexport const WRITE_USERNAME = 'WRITE_USERNAME'\r\nexport const WRITE_USER_ID = 'WRITE_USER_ID'\r\n\r\n\r\n\r\nexport const WRITE_CATEGORIES = 'WRITE_CATEGORIES'\r\nexport const WRITE_CATEGORY_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const DELETED_CATEGORY = 'DELETED_CATEGORY'\r\nexport const CLEAR_CATEGORIES = 'CLEAR_CATEGORIES'\r\nexport const CATEGORY_TOGGLE_FETCH_LOADER = 'CATEGORY_TOGGLE_FETCH_LOADER'\r\n\r\n\r\n\r\nexport const TOGGLE_AUTH ='TOGGLE_AUTH'\r\nexport const TOGGLE_NOTIFICATION ='TOGGLE_NOTIFICATION'\r\n\r\n\r\nexport const WRITE_PRODUCTS = 'WRITE_PRODUCTS'\r\nexport const WRITE_PRODUCT_BY_ID = 'WRITE_PRODUCT_BY_ID'\r\nexport const WRITE_RAITING_BY_ID = 'WRITE_RAITING_BY_ID'\r\nexport const ADDED_PRODUCT = 'ADDED_PRODUCT'\r\nexport const DELETED_PRODUCT = 'DELETED_PRODUCT'\r\nexport const CLEAR_PRODUCTS = 'CLEAR_PRODUCTS'\r\nexport const WRITE_MEASURE_UNITS='WRITE_MEASURE_UNITS'\r\nexport const PRODUCT_TOGGLE_FETCH_LOADER='PRODUCT_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_PROVIDER_BY_ID = 'WRITE_PROVIDER_BY_ID'\r\nexport const WRITE_PROVIDER = 'WRITE_PROVIDER'\r\nexport const WRITE_ACTIVE_PROVIDERS = 'WRITE_ACTIVE_PROVIDERS'\r\nexport const DELETED_PROVIDER = 'DELETED_PROVIDER'\r\nexport const PROVIDER_TOGGLE_FETCH_LOADER = 'PROVIDER_TOGGLE_FETCH_LOADER'\r\nexport const CLEAR_PROVIDERS = 'CLEAR_PROVIDERS'\r\n\r\n\r\nexport const WRITE_USERS = 'WRITE_USERS'\r\nexport const WRITE_USER_BY_ID = 'WRITE_USER_BY_ID'\r\nexport const DELETED_USER = 'DELETED_USER'\r\nexport const USER_TOGGLE_FETCH_LOADER = 'USER_TOGGLE_FETCH_LOADER'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\n\r\n\r\nexport const WRITE_ORDERS = 'WRITE_ORDERS'\r\nexport const WRITE_ORDER_BY_ID = 'WRITE_ORDER_BY_ID'\r\nexport const DELETED_ORDER = 'DELETED_ORDER'\r\nexport const CLEAR_ORDERS = 'CLEAR_ORDERS'\r\nexport const ORDER_TOGGLE_FETCH_LOADER = 'ORDER_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_DELIVERY_CASH = 'WRITE_DELIVERY_CASH'\r\n\r\n\r\nexport const WRITE_FAQ = 'WRITE_FAQ'\r\nexport const WRITE_FAQ_BY_ID = 'WRITE_FAQ_BY_ID'\r\nexport const DELETED_FAQ = 'DELETED_FAQ'\r\nexport const CLEAR_FAQ = 'CLEAR_FAQ'\r\nexport const FAQ_TOGGLE_FETCH_LOADER = 'FAQ_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const  WRITE_ABOUT_US = 'WRITE_ABOUT_US'\r\nexport const  WRITE_ABOUT_US_BY_ID = 'WRITE_ABOUT_US_BY_ID'\r\nexport const  DELETED_ABOUT_US = 'DELETED_ABOUT_US'\r\nexport const CLEAR_ABOUT_US = 'CLEAR_ABOUT_US'\r\nexport const  ABOUT_TOGGLE_FETCH_LOADER = 'ABOUT_TOGGLE_FETCH_LOADER'","\r\nimport * as axios from 'axios'\r\nconst tokenGetter = ()=>{ return { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`} }}\r\nconst instance = axios.create({\r\n    baseURL: 'https://organicinkg.net:8443/api/v1/',\r\n})\r\nexport const authReq = (data)=>instance.post('auth',data).then(response=>response.data)\r\nexport const authRefreshReq = (data)=>instance.post('refresh',data).then(response=>response.data)\r\n\r\n\r\nexport const categoryGetByIdReq = (id)=>instance.get(`categories/${id}`).then(response=>response.data)\r\nexport const categoryPostReq = (data)=>instance.post('categories',data,tokenGetter())\r\nexport const categoryDelByIdReq = (id)=>instance.delete(`categories/${id}`,tokenGetter())\r\nexport const categoryUpdReq = (data,id)=>instance.put(`categories/${id}`,data,tokenGetter())\r\nexport const categoryGetSearchReq = (searchText,page)=>instance.get(`${searchText ? \r\n    `categories/search?name=${searchText}&page=${page}&size=20` \r\n    : `categories?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\n\r\n\r\nexport const productsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `products/like?prodName=${searchText}&page=${page}&size=20`\r\n    : `products?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const productGetByIdReq = (id)=>instance.get(`products/${id}`).then(response=>response.data)\r\nexport const productPostReq = (data)=>instance.post('products',data,tokenGetter())\r\nexport const productDelByIdReq = (id)=>instance.delete(`products/${id}`,tokenGetter())\r\nexport const productUpdReq = (data,id)=>instance.put(`products/${id}`,data,tokenGetter())\r\n\r\nexport const productImgPostReq = (data)=>instance.post(`productImages`,data,\r\n    {headers: { 'content-type': 'multipart/form-data',\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`}})\r\nexport const productImgUpdReq = (data,id)=> instance.put(`productImages/${id}`,data, {headers: { 'content-type': 'multipart/form-data',\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}` }})\r\n\r\nexport const measureUnitGetReq = ()=>instance.get(`measureUnit`,tokenGetter()).then(response=>response.data)\r\n\r\n\r\nexport const providersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `supplier/search?name=${searchText}&page=${page}&size=20`\r\n    : `supplier?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const providerGetByIdReq = (id)=>instance.get(`supplier/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const providerPostReq = (data)=>instance.post('supplier',data,tokenGetter())\r\nexport const providerImgPostReq = (data)=> instance.post('supplierFile',data,tokenGetter())\r\nexport const providerDelByIdReq = (id)=>instance.delete(`supplier/${id}`,tokenGetter())\r\nexport const providerUpdReq = (data,id)=>instance.put(`supplier/${id}`,data,tokenGetter())\r\nexport const providerActiveGetReq = ()=>instance.get(`supplier/active`,tokenGetter()).then(response=>response.data)\r\nexport const providerPlaceOfProductionPostReq = (data)=>instance.post(`placeOfProduction`,data,tokenGetter())\r\nexport const providerPlaceOfProductionUpdReq = (data,id)=>instance.put(`placeOfProduction/${id}`,data,tokenGetter())\r\n\r\nexport const usersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `client/search?firstName=${searchText}&page=${page}&size=20`\r\n    : `client/?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const userGetByIdReq = (id)=>instance.get(`client/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const userDelByIdReq = (id)=>instance.delete(`client/${id}`,tokenGetter())\r\nexport const userUpdReq = (data,id)=>instance.put(`client/${id}`,data,tokenGetter())\r\n\r\n\r\n\r\n\r\nexport const ordersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `orders/search?name=${searchText}&page=${page}&size=20`\r\n    : `orders?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const orderGetByIdReq = (id)=>instance.get(`orders/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const orderPostReq = (data)=>instance.post('orders',data,tokenGetter())\r\nexport const orderDelByIdReq = (id)=>instance.delete(`orders/${id}`,tokenGetter())\r\nexport const orderUpdStatusReq = (data,id)=>instance.put(`orders/status/${id}?orderStatus=${data}`,data)\r\n\r\nexport const deliveryCashGetReq = ()=>instance.get(`orderSetting/1`,tokenGetter()).then(response=>response.data)\r\nexport const deliveryCashUpdReq = (data)=>instance.put(`orderSetting/1`,data,tokenGetter())\r\n\r\n\r\n\r\n\r\nexport const faqGetReq = (searchText,page)=>instance.get(`${searchText ? `faq/search?question=${searchText}&page=${page}&size=20`\r\n    : `faq/?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const faqGetByIdReq = (id)=>instance.get(`faq/${id}`).then(response=>response.data)\r\nexport const faqPostReq = (data)=>instance.post('faq',data,tokenGetter())\r\nexport const faqDelByIdReq = (id)=>instance.delete(`faq/${id}`,tokenGetter())\r\nexport const faqUpdReq = (data,id)=>instance.put(`faq/${id}`,data,tokenGetter())\r\n\r\nexport const aboutUsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `about/search?header=${searchText}&page=${page}&size=20`\r\n    : `about/?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const aboutUsGetByIdReq = (id)=>instance.get(`about/${id}`).then(response=>response.data)\r\nexport const aboutUsPostReq = (data)=>instance.post('about',data,tokenGetter())\r\nexport const aboutUsDelByIdReq = (id)=>instance.delete(`about/${id}`,tokenGetter())\r\nexport const aboutUsUpdReq = (data,id)=>instance.put(`about/${id}`,data,tokenGetter())","export const getTemplate = async (dispatch,getFunc, actionType,toggleLoader,id=null,showNotification)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(id).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  'Не загружаются запись...'\r\n    })));\r\n    if(response?.result || response?.result===null) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n\r\n    }\r\n    dispatch(toggleLoader(false))\r\n\r\n}","\r\n\r\nexport const createOrChangeTemplate = async (\r\n    dispatch,\r\n    func,\r\n    data,\r\n    toggleLoader,\r\n    id='',\r\n    showNotification\r\n    )=>{\r\n\r\n    dispatch(toggleLoader);\r\n    await func(data,id).then(response => {\r\n        const notifObj = {\r\n            isOpen: true,\r\n            title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n            body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' : id ? 'Запись изменена!':'Запись добавлена!'\r\n        }\r\n        dispatch(showNotification(notifObj))\r\n    }).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  id ? 'Запись не изменена!' :'Запись не добавлена!'\r\n    })))\r\n    dispatch(toggleLoader)\r\n}","\r\nexport const deleteTemplate = async (dispatch,deleteFunc,id,toggleLoader,actionType,showNotification)=>{\r\n    dispatch(toggleLoader(true))\r\n    await deleteFunc(id).then(()=>{\r\n        dispatch(showNotification({\r\n            isOpen: true,\r\n            title:  'Успех!',\r\n            body: 'Запись удалена!'\r\n        }))\r\n        dispatch({type:actionType,payload: id})\r\n    })\r\n   .catch(()=>{\r\n       dispatch(showNotification({\r\n           isOpen: true,\r\n           title: 'Ошибка!',\r\n           body:  'Запись не удалена!'\r\n       }))\r\n   })\r\n    dispatch(toggleLoader(false))\r\n}","export const checkHasData = data=>{\r\n    if(!data.length){\r\n        return false\r\n    }\r\n    return true\r\n}","export const getSearchedTemplate = async (dispatch,getFunc, actionType,toggleLoader,page,searchText,showNotification)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(searchText,page).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  'Не загружаются записи...'\r\n    })))\r\n    if(response?.result) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n    }\r\n    dispatch(toggleLoader(false))\r\n}","export const updateItemInStore = (state,data,type)=>{\r\n    let idx = -1;\r\n    const newArrayData = [...state]\r\n    switch (type) {\r\n        case 'delete':\r\n            idx = state.findIndex(item=>item.id === parseInt(data))\r\n            return [...newArrayData.slice(0, idx), ...newArrayData.slice(idx + 1)]\r\n        case 'update':\r\n            idx = state.findIndex(item=>item.id === parseInt(data.id))\r\n            return [...newArrayData.slice(0, idx),data, ...newArrayData.slice(idx + 1)]\r\n        default:{\r\n            return\r\n        }\r\n    }\r\n}","export const logout = ()=>{\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('tokenExpirationTime')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('refreshExpirationTime')\r\n    localStorage.removeItem('id')\r\n}","import {\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME,\r\n    WRITE_USER_ID,\r\n    TOGGLE_NOTIFICATION\r\n} from './types'\r\nimport {authRefreshReq, authReq, userGetByIdReq} from \"../../utils/api/Request\";\r\nimport {logout} from \"../../components/Auth/logout\";\r\n\r\n\r\nconst initialState={\r\n    authFetchLoader: false,\r\n    isAuthorized: true,\r\n    isPageLoader: false,\r\n    authErrorMessage: '',\r\n    username: '',\r\n    userId: undefined,\r\n    notification: {\r\n        isOpen: false,\r\n        title: '',\r\n        body: ''\r\n    }\r\n}\r\n\r\n\r\nexport const mainReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                authFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n        }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload,\r\n            }\r\n        case WRITE_USER_ID:\r\n        return {\r\n            ...state,\r\n            userId: action.payload\r\n        }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleNotification = notif=>{\r\n    return{\r\n        type: TOGGLE_NOTIFICATION,\r\n        payload: notif\r\n    }\r\n}\r\nexport const writeUserId = value=>{\r\n    return{\r\n        type: 'WRITE_USER_ID',\r\n        payload: value\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const toggleLoader = bool=>{\r\n    return{\r\n        type: 'TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const authRefresh = data=> {\r\n    return async dispatch => {\r\n        dispatch(toggleLoader(true))\r\n        await authRefreshReq(data).then(async response => {\r\n            if(response.resultCode==='NOT_FOUND'){\r\n                logout()\r\n            }else {\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const getUserName=()=>{\r\n    return async dispatch=>{\r\n        dispatch(toggleLoader(true))\r\n        await userGetByIdReq(localStorage.getItem('id')).then(response=>{\r\n            dispatch(writeUsername(response.result?.firstName ? response.result?.firstName : response.result?.phoneNumber))\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(toggleLoader(true))\r\n        await authReq(data).then(async response=>{\r\n            if(response.result.statusCodeValue===400){\r\n                dispatch(writeAuthMessage('Неверно введены данные.'))\r\n            }else {\r\n                dispatch(togglePageLoader(true))\r\n                dispatch(toggleAuth(true))\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\n\r\nconst tokenToLocalStorage = (response)=>{\r\n    localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n    localStorage.setItem(\"tokenExpirationTime\", JSON.stringify(Date.parse(response.result.body.tokenExpirationTime)))\r\n    localStorage.setItem(\"refreshExpirationTime\", JSON.stringify(Date.parse(response.result.body.refreshExpirationTime)))\r\n    localStorage.setItem(\"id\", response.result.body.id)\r\n    localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n}\r\n\r\n\r\n","import {\r\n    WRITE_ORDERS,\r\n    WRITE_ORDER_BY_ID,\r\n    SEARCHING,\r\n    ORDER_TOGGLE_FETCH_LOADER,\r\n    WRITE_DELIVERY_CASH, DELETED_ORDER, CLEAR_ORDERS\r\n} from './types'\r\nimport {\r\n    deliveryCashGetReq,\r\n    deliveryCashUpdReq,\r\n    orderDelByIdReq, orderGetByIdReq, orderPostReq, ordersGetReq,  orderUpdStatusReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    orders: [],\r\n    orderById: {},\r\n    deliveryCash : {},\r\n    hasOrders: true,\r\n    orderFetchLoader: false\r\n}\r\n\r\n\r\nexport const orderReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ORDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                orderFetchLoader: action.payload\r\n            }\r\n        case WRITE_ORDERS:\r\n            return{\r\n                ...state,\r\n                orders: [...state.orders,...action.payload],\r\n                hasOrders: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                hasOrders: true,\r\n\r\n            }\r\n        case WRITE_DELIVERY_CASH:\r\n            return{\r\n                ...state,\r\n                deliveryCash: action.payload,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                hasOrders: true\r\n            }\r\n        case WRITE_ORDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                orderById: action.payload\r\n            }\r\n        case DELETED_ORDER:\r\n            return{\r\n                ...state,\r\n                orders: updateItemInStore(state.orders,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearOrder = ()=>{\r\n    return{\r\n        type: WRITE_ORDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const orderToggleLoader = bool=>{\r\n    return{\r\n        type: ORDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const clearOrders = ()=>{\r\n    return{\r\n        type: CLEAR_ORDERS\r\n    }\r\n}\r\nexport const getOrders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, ordersGetReq, WRITE_ORDERS, orderToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getOrderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, orderGetByIdReq, WRITE_ORDER_BY_ID, orderToggleLoader,id,toggleNotification)\r\n}\r\nexport const getDeliveryCash = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,deliveryCashGetReq,WRITE_DELIVERY_CASH,orderToggleLoader,'',toggleNotification)\r\n}\r\n\r\nexport const updateDeliveryCash = data=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,deliveryCashUpdReq,{deliveryPrice: parseInt(data.deliveryPrice), deliveryType: \"COURIER\"},orderToggleLoader,1,toggleNotification)\r\n}\r\n\r\nexport const createOrder = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch, orderPostReq, data, orderToggleLoader)\r\n}\r\nexport const deleteOrder = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,orderDelByIdReq,id[i],orderToggleLoader,DELETED_ORDER,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateOrder = (id,data) =>{\r\n    return async dispatch =>{\r\n        dispatch(orderToggleLoader(true))\r\n        await orderUpdStatusReq( data.orderStatus,id)\r\n        dispatch(orderToggleLoader(false))\r\n    }\r\n}\r\n\r\n","const getExpirationDate = (token,exp)=> {\r\n    if (!token || !exp) {\r\n        return undefined\r\n    }\r\n    return exp\r\n};\r\n\r\nconst isExpired = (exp) => {\r\n    if (!exp) {\r\n        return false;\r\n    }\r\n    if (Date.now() < exp){\r\n        return exp - Date.now()\r\n    }else{\r\n        return false\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const  expChecker = ()=>isExpired(getExpirationDate(localStorage.getItem(\"accessToken\"),localStorage.getItem('tokenExpirationTime')))","import React from 'react'\r\nimport './Preloader.css'\r\nconst Preloader = (props)=>{\r\n    return(\r\n       <div className={'preloader'}>\r\n                <span className=\"circle circle-1\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-2\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-3\" style={{width: props.width,height: props.height}}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect} from 'react'\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {logout} from \"../Auth/logout\";\r\nimport {getUserName, toggleAuth, writeUserId} from \"../../redux/reducers/mainReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoSVG} from '../../assets/icons'\r\nimport {expChecker} from \"../Auth/expChecker\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Header = (props)=>{\r\n\r\nuseEffect(()=>{\r\n    if(expChecker()) {\r\n        props.getUserName()\r\n        props.writeUserId(parseInt(localStorage.getItem('id')))\r\n    }\r\n},[])\r\n    return(\r\n        <div className='header'>\r\n        <div className='container'>\r\n\r\n        <div className=\"header__container\">\r\n            <Link to={\"/providers\"}><img src={logoSVG} alt=\"\"/></Link>\r\n            <div className=\"header-profile\">\r\n                {props.username ?\r\n                <span className='header-profile__name'>{props.username}</span>\r\n                :\r\n                    <Preloader width={'6px'} height={'6px'}/>}\r\n\r\n                <Link to={\"/profile\"}><span className='header-profile__password'>Профиль</span></Link>\r\n                <span className='header-profile__divider'>/</span>\r\n                <span className='header-profile__exit' onClick={()=> {\r\n                    logout()\r\n                    props.toggleAuth(false)\r\n                }}>Выйти</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserName,writeUserId})(Header)","import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,svg,\r\n                         activeSvg,\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n           return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes} onClick={()=>{\r\n            setClick(true)\r\n            history.push(to)\r\n        }}><img src={clicked ? activeSvg : svg} alt=\"\"/><span>{name}</span></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","import {\r\n    categorySVG,\r\n    orderSVG,\r\n    productSVG,\r\n    providerSVG,\r\n    questionSVG,\r\n    userSVG,\r\n    orderActiveSVG,\r\n    categoryActiveSVG,\r\n    providerActiveSVG,\r\n    productActiveSVG,\r\n    userActiveSVG,\r\n    questionActiveSVG,\r\n    aboutActiveSVG,\r\n    aboutSVG, settingsSVG, settingsActiveSVG\r\n} from \"../../assets/icons\";\r\n\r\nexport const sideBarConfig = [\r\n    {\r\n        to: '/providers',\r\n        name: 'Поставщики',\r\n        svg: providerSVG,\r\n        activeSvg: providerActiveSVG\r\n    },\r\n    {\r\n        to: '/orders',\r\n        name: 'Заказы',\r\n        svg: orderSVG,\r\n        activeSvg: orderActiveSVG\r\n    },\r\n    {\r\n        to: '/products',\r\n        name: 'Товары',\r\n        svg: productSVG,\r\n        activeSvg: productActiveSVG\r\n    },\r\n    {\r\n        to: '/users',\r\n        name: 'Пользователи',\r\n        svg: userSVG,\r\n        activeSvg: userActiveSVG\r\n    },\r\n    {\r\n        to: '/categories',\r\n        name: 'Категории',\r\n        svg: categorySVG,\r\n        activeSvg: categoryActiveSVG\r\n    },\r\n    {\r\n        to: '/faq',\r\n        name: 'Вопросы',\r\n        svg: questionSVG,\r\n        activeSvg: questionActiveSVG\r\n    },\r\n    {\r\n        to: '/aboutus',\r\n        name: 'О нас',\r\n        svg: aboutSVG,\r\n        activeSvg: aboutActiveSVG\r\n    },\r\n    {\r\n        to: '/settings',\r\n        name: 'Настройки',\r\n        svg: settingsSVG,\r\n        activeSvg: settingsActiveSVG\r\n    }\r\n]","import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst SidebarList  = (props)=>{\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n                svg={item.svg}\r\n                name={item.name}\r\n                activeSvg={item.activeSvg}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","import React,{useEffect,useState} from 'react'\r\nimport {searchSVG } from '../../assets/icons'\r\nimport './Search-panel.css'\r\n\r\nconst SearchPanel = (props)=>{\r\n    return(\r\n        <div className='searchPanel'>\r\n            <span><img src={searchSVG} alt=\"\"/><input type=\"text\" placeholder={'Поиск'} onChange={(event) => props.handleSearchText(event.target.value)}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import React from 'react'\r\nimport './Btns.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AddBtn = ({urlToCreate})=>{\r\n    return(\r\n        <Link to={urlToCreate} className='addBtn'>Добавить</Link>\r\n    )\r\n}\r\nexport default AddBtn","import { TOGGLE_MODAL} from './types'\r\n\r\nconst initialState={\r\n    isOpenModal: {\r\n        isOpen:false,\r\n        title:'',\r\n        confirmFunc: undefined,\r\n        urlToTable : ''\r\n    }\r\n}\r\n\r\n\r\nexport const modalReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_MODAL:\r\n            return{\r\n                ...state,\r\n                isOpenModal: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const toggleModal = obj=>{\r\n    return{\r\n        type:  TOGGLE_MODAL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\n","import { WRITE_RECORD_ID,WRITE_ELEMENTS_TO_DELETE,WRITE_TABLE_MESSAGE} from './types'\r\n\r\nconst initialState={\r\n   recordViewId:'',\r\n    elementsToDelete: [],\r\n    tableMessage: ''\r\n}\r\n\r\n\r\nexport const tableReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case WRITE_RECORD_ID:\r\n            return{\r\n                ...state,\r\n                recordViewId: action.payload\r\n            }\r\n        case WRITE_ELEMENTS_TO_DELETE:\r\n            return{\r\n                ...state,\r\n                elementsToDelete: action.payload\r\n            }\r\n        case WRITE_TABLE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                tableMessage: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeTableMessage = str=>{\r\n    return{\r\n        type: WRITE_TABLE_MESSAGE,\r\n        payload: str\r\n    }\r\n}\r\nexport const writeElementsToDelete = values=>{\r\n    return{\r\n        type:  WRITE_ELEMENTS_TO_DELETE,\r\n        payload: values\r\n    }\r\n}\r\nexport const writeRecordId = value=>{\r\n    return{\r\n        type:  WRITE_RECORD_ID,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Btns.css'\r\nimport {deleteSVG} from \"../../assets/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\n\r\nconst DeleteBtn = ({toggleModal,deleteFunc,elementsToDelete,writeTableMessage})=>{\r\n\r\n    const confirmHandler = ()=>{\r\n          deleteFunc(elementsToDelete)\r\n    }\r\n\r\n    return(\r\n        <img className={'deleteBtn'} src={deleteSVG} alt=\"\"  onClick={()=>{\r\n            if(elementsToDelete.length===0){\r\n             return writeTableMessage('Вы не выбрали ни одной записи!')\r\n            }\r\n            return toggleModal({isOpen:true,title:'Вы действительно хотите удалить запись(-и)?',confirmFunc: confirmHandler})\r\n        }}/>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal,writeTableMessage})(DeleteBtn)","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\nconst TableItemColumn = ({item,column})=>{\r\n\r\n    return(\r\n        <div className='tableItemColumn'>\r\n            <span className='tableItemColumn__title'>\r\n                {item.title}\r\n            </span>\r\n            <span className='tableItemColumn__value'>\r\n                {column?.render ? column.render(item.value): item.value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItemColumn","export const toBeautifyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'CASH':\r\n            return 'Наличные'\r\n        case 'ELSOM':\r\n            return 'Эльсом'\r\n        case 'COURIER':\r\n            return 'Курьер'\r\n        case 'STORAGE':\r\n            return 'Самовывоз'\r\n        case 'AWAITING_DELIVERY':\r\n            return 'Ожидает доставку'\r\n        case 'PAID_AWAITNG_DELIVERY':\r\n            return 'Оплачен, ожидает доставку'\r\n        case 'DELIVERED_AND_PAID':\r\n            return 'Доставлен и оплачен'\r\n        case 'DELIVERED':\r\n            return 'Доставлен'\r\n        case 'CLOSED':\r\n            return 'Закрыт'\r\n        case null:\r\n            return 'Не указано'\r\n        case 'null':\r\n            return 'Не указано'\r\n        case '':\r\n            return 'Не указано'\r\n        case NaN:\r\n            return 'Не указано'\r\n        case undefined:\r\n            return 'Не указано'\r\n        case 'SOM':\r\n            return 'сом'\r\n        case 'USD':\r\n            return '$'\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport TableItemColumn from \"./TableItemColumn\";\r\nimport {connect} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst TableItem= ({columns,data,handlerClick,elementsToDelete,writeElementsToDelete,deleting,writeTableMessage})=>{\r\n    const [check,setCheck] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(deleting) {\r\n            let buff = [...elementsToDelete]\r\n\r\n            if (check) {\r\n                buff.push(data.id)\r\n                writeElementsToDelete(buff)\r\n            } else {\r\n                const index = buff.indexOf(data.id)\r\n                if (index > -1) {\r\n                    buff.splice(index, 1);\r\n                    writeElementsToDelete(buff)\r\n                }\r\n            }\r\n            return () => {\r\n                writeElementsToDelete([])\r\n            }\r\n        }\r\n    },[check])\r\n    const tableItemColumn = ()=> {\r\n        let result = []\r\n\r\n        const valuesToArray = Object.values(data).slice(1,data.length)\r\n        const valsKey = Object.keys(data).slice(1, data.length)\r\n        for (let i = 0; i < columns.length; i++) {\r\n            for (let j = 0; j < valsKey.length; j++) {\r\n                if (valsKey[j] === columns[i].dataIndex) {\r\n                    const value = ()=> {\r\n                        if(columns[i]?.object){\r\n                            return valuesToArray[j]?.[`${columns[i].object}`]\r\n                        }\r\n                        return valuesToArray[j]\r\n                    }\r\n                    result.push((\r\n                            <TableItemColumn key={`${i}-${data.id}`} column={columns[i]} item={{title: columns[i].title, value: toBeautifyFieldsValue(value())}}/>\r\n                    ))\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    let style={}\r\n    useEffect(()=>{\r\n        if(check){\r\n            style= {\r\n                boxShadow: '0px 1px 8px rgba(0,155,0,.4)'\r\n            }\r\n        }\r\n\r\n    },[])\r\n    return(\r\n        <div className={'tableItem-container'}\r\n        >\r\n            {deleting &&\r\n            <label className=\"tableItem-checkbox-label\">\r\n                <input className=\"tableItem-checkbox__default\" type=\"checkbox\" onClick={() => {\r\n                    writeTableMessage('')\r\n                    setCheck(!check)\r\n                }}/>\r\n                <span className=\"tableItem-checkbox__new\"></span>\r\n            </label>\r\n            }\r\n        <div  className='tableItem' style={style}  onClick={()=>handlerClick(data.id)}>\r\n\r\n           {tableItemColumn()}\r\n           \r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(TableItem)","import React from 'react'\r\nimport {errorSVG} from \"../../assets/icons\";\r\n\r\n\r\n\r\nconst ErrorMsg = ({text})=>{\r\n    return(\r\n\r\n        <span className={'errorMessage'}><img src={errorSVG} alt=\"\"/>{text}</span>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useEffect, useState} from 'react'\r\nimport TableItem from \"./Table-item\";\r\nimport './Table.css'\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst Table = ({isLoading,\r\n                   getDataFunc,\r\n                   data=[],\r\n                   columns=[],\r\n                   handlerClick,\r\n                   deleting,\r\n                   tableMessage,\r\n                   writeTableMessage,\r\n                   deleteFunc,\r\n                   adding,\r\n                   urlToCreate,\r\n                   hasData,\r\n                   clearTable\r\n               })=>{\r\n    const [searchText,setSearchText] = useState('')\r\n    const [page,setPage] = useState(1)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            writeTableMessage('')\r\n            clearTable()\r\n        }\r\n    },[])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n                    getDataFunc(1,searchText)\r\n                    setPage(2)\r\n                    dispatch({type: 'SEARCHING'})\r\n            }, 1000);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [searchText]);\r\n    const elements = data.map(item=> <TableItem key={item.id} columns={columns} data={item} handlerClick = {handlerClick} deleting={deleting}/>)\r\n    return(\r\n        <div className='table-container'>\r\n            <div className='page-functional'>\r\n                <SearchPanel handleSearchText={setSearchText} />\r\n                <div className={'page-functional__btns'}>\r\n                {adding &&\r\n                <AddBtn\r\n                    urlToCreate={urlToCreate}\r\n                />\r\n                }\r\n                {deleting &&\r\n                <DeleteBtn\r\n                    deleteFunc = {deleteFunc}\r\n                />}\r\n                </div>\r\n            </div>\r\n            <div className=\"tableItem-container__wrapper\">\r\n                {tableMessage && <ErrorMsg text={tableMessage}/>}\r\n                    <InfiniteScroll\r\n                        dataLength={data.length} //This is important field to render the next data\r\n                        next={() => {\r\n                            getDataFunc(page, searchText)\r\n                            setPage(page + 1)\r\n                        }}\r\n                        hasMore={hasData}\r\n                        loader={<Preloader/>}\r\n                        endMessage={\r\n                            <p style={{textAlign: 'center'}}>\r\n                                <b>Загружены все записи.</b>\r\n                            </p>\r\n                        }\r\n                        initialScrollY={0}\r\n                    >\r\n                        {elements}\r\n                    </InfiniteScroll>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        tableMessage : state.table.tableMessage\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeTableMessage})(Table)\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport './RecordView.css'\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\nconst RecordViewer=({titles,values={},urlToUpd,urlToTable,match,editing,recordViewValuesConfig})=>{\r\n    const valuesToArray = recordViewValuesConfig ? Object.values(recordViewValuesConfig) :Object.values(values).slice(1,values.length)\r\n    const valsKey =recordViewValuesConfig ? Object.keys(recordViewValuesConfig) : Object.keys(values).slice(1,values.length)\r\n    const elements = ()=>{\r\n        let results=[];\r\n        for(let i=0;i<titles.length;i++){\r\n            for(let j=0;j<valsKey.length;j++){\r\n                if( valsKey[j]===titles[i].dataIndex){\r\n                    results.push((\r\n                        <div key={j} className='recordView__item'>\r\n                            <span className='recordView__item-title'>{titles[i].title}</span>\r\n\r\n                            {titles[i]?.type==='image' ?\r\n                                <div className={'recordView__item-imgWrapper'}>\r\n\r\n\r\n                                    { ////////////////////////////////////////////////////////////////////\r\n                                        Array.isArray(valueChooser(titles[i], valuesToArray[j])) ?      // проверка на массив картинок\r\n                                        valueChooser(titles[i], valuesToArray[j]).map(item => {\r\n                                            return (\r\n                                                <div key={item} className={'recordView__item-imgContainer'}><img\r\n                                                    src={item} alt=\"\"/></div>\r\n                                            )\r\n                                        })                                                              // вывод только одной картинки\r\n                                        :  <div className={'recordView__item-imgContainer'}>\r\n                                            <img src={ valuesToArray[j]} alt=\"\"/></div>\r\n                                        //////////////////////////////////////////////////////////////////\r\n                                    }\r\n                                    </div>\r\n                           : <span className='recordView__item-value'> {toBeautifyFieldsValue(valueChooser(titles[i],valuesToArray[j]))}</span>}\r\n                        </div>\r\n                    ))\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\nreturn results\r\n    }\r\n    return(\r\n        <div className='recordView__container'>\r\n            <div className='recordView__container-title'><Link to={urlToTable}><img src={backSVG} alt=\"\"/></Link><h2>{valuesToArray[0]}</h2></div>\r\n            {elements()}\r\n            {editing &&\r\n            <Link to={`${urlToUpd}/${match.params.id}`} className={'recordView__btn'}>Редактировать запись</Link>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(RecordViewer);\r\n\r\nconst valueChooser = (title,value)=> {\r\n    if(title?.object){\r\n        return value?.[`${title.object}`]\r\n    }else if(title?.array){\r\n        if(title.array){\r\n            return fieldSearcherInObj(value,title.array)\r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nfunction fieldSearcherInObj(obj,searchedField) {\r\n    const result = [];\r\n    for (let prop in obj) {\r\n        const value = obj[prop];\r\n        if(searchedField === prop){\r\n            return value\r\n        }\r\n        if (typeof value === 'object') {\r\n            result.push(fieldSearcherInObj(value,searchedField));\r\n        }\r\n    }\r\n    return result;\r\n}","import React, {useEffect} from 'react'\r\nimport RecordViewer from \"./RecordViewer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst RecordViewerContainer = (\r\n    {\r\n        titles,\r\n        urlToUpd,\r\n        urlToTable,\r\n        match,\r\n        valueById,\r\n        clearFunc,\r\n        getByIdFunc,\r\n\r\n        recordViewValuesConfig,\r\n\r\n        isLoading,\r\n        editing\r\n    }\r\n)=>{\r\n    useEffect(()=>{\r\n        getByIdFunc(match.params.id)\r\n        return ()=>clearFunc()\r\n    },[])\r\n    return(\r\n        valueById && !isLoading ?\r\n        <RecordViewer\r\n            titles={titles}\r\n            values={valueById}\r\n            urlToUpd={urlToUpd}\r\n            urlToTable={urlToTable}\r\n            editing={editing}\r\n            recordViewValuesConfig={recordViewValuesConfig}\r\n        /> : <Preloader />\r\n    )\r\n}\r\n\r\nexport default withRouter(RecordViewerContainer)","import React from 'react'\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst EditBtn = ({toggleModal,confirmFunc,urlToTable='main',disabled=false})=>{\r\n    return(\r\n        <div className='createOrEditBtn-submit'\r\n                onClick={async ()=>{\r\n                    if(!disabled){\r\n                        return toggleModal(\r\n                            {   isOpen:true,\r\n                                title:'Вы действительно хотите сохранить изменения?',\r\n                                confirmFunc: confirmFunc,\r\n                                urlToTable: urlToTable\r\n                            },\r\n                        )\r\n                    }\r\n                   return confirmFunc()\r\n                }}>\r\n            Сохранить</div>\r\n                )\r\n}\r\n\r\nexport default connect(null,{toggleModal})(EditBtn)","import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}>\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null,{toggleModal})(CancelBtn)","import React, {useState} from 'react'\r\nimport {openList} from \"../../../assets/icons\";\r\nimport SelectorList from \"./SelectorList\";\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst SelectorItem = ({data,isOpenList,setOpenList,handleClick,thirdStyle=false})=>{\r\n    const [checked, setChecked] = useState(true)\r\n    const styles = classNames({\r\n        'selectorInput__item' : !isOpenList && !thirdStyle,\r\n        \"selectorInput__item-2\":  isOpenList,\r\n        'selectorInput__item-3' : thirdStyle\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <li  className={styles}  onClick={()=> {\r\n\r\n                setChecked(!checked)\r\n                data?.children && setOpenList(!isOpenList)\r\n                if(checked) {\r\n                 return handleClick(data.name)\r\n                }else{\r\n                    return handleClick('')\r\n                }\r\n            }}>\r\n              {data.name}\r\n                   {data?.children && <img src={openList} alt=\"\"/>}\r\n            </li>\r\n            {isOpenList && data.children.map(item=><SelectorList thirdStyle={true} data={item} handleClick={handleClick}/>)}\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorItem","import React, {useState} from 'react'\r\nimport SelectorItem from \"./SelectorItem\";\r\n\r\n\r\n\r\n\r\nconst SelectorList = ({data,handleClick,thirdStyle})=>{\r\n    const [isOpenList,setOpenList] = useState(false);\r\n    return(\r\n        <>\r\n            {data?.children ?\r\n                <ul key={data.id} className={isOpenList ? 'selectorInput__list-clicked' :'selectorInput__list'}>\r\n                <SelectorItem\r\n                    isOpenList={isOpenList}\r\n                    setOpenList={setOpenList}\r\n                    handleClick={handleClick}\r\n                    data={data}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n\r\n\r\n            </ul>\r\n            :\r\n                <SelectorItem\r\n                    data={data}\r\n                    handleClick={handleClick}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n            }\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorList","import React, {useEffect, useRef, useState} from 'react'\r\nimport SelectorList from \"./SelectorList\";\r\n\r\nconst Selector = ({handleClick,setVisibleSelector,data})=>{\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e)=>{\r\n        if(!selectorRef.current.contains(e.target)){\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener('click',closeSelector,false)\r\n        return ()=>{\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    },[])\r\n\r\n    const elements = data.map(item=>{\r\n        return(\r\n            <SelectorList handleClick={handleClick} key={item.id} data={item} />\r\n        )\r\n    })\r\n    return(\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, {useEffect, useRef, useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG, plusSVG} from \"../../../assets/icons\";\r\nimport Selector from \"./Selector\";\r\nimport {toUglyfyFieldsValue} from \"../../../utils/toUglyfyFieldsValue\";\r\n\r\n\r\nconst SelectorInput = ({name,value,setFieldValue,placeholder,data})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selected, setSelected] = useState('')\r\n    const [inputText,setInputText] = useState(value);\r\n    const onChange = (value)=>{\r\n        setInputText(value)\r\n    }\r\n    useEffect(()=>{\r\n        setFieldValue(name,inputText)\r\n    },[inputText])\r\n\r\n\r\n    useEffect(()=>{\r\n  setInputText(inputText + ` ${toUglyfyFieldsValue(selected)} `)\r\n\r\n\r\n    },[selected])\r\n\r\n\r\n    return(\r\n\r\n        <div className={'selectorInput'}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   onChange={e=>onChange(e.target.value)}\r\n                    value={inputText}\r\n                   />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"\r\n                 onClick={(event)=>setVisibleSelector(!visibleSelector)}/>\r\n            {visibleSelector && <Selector data={data} setVisibleSelector={setVisibleSelector} handleClick = {setSelected}/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default  SelectorInput\r\n\r\n\r\n","export const toUglyfyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'Наличные':\r\n            return 'CASH'\r\n        case 'Эльсом':\r\n            return 'ELSOM'\r\n        case 'Курьер':\r\n            return 'COURIER'\r\n        case 'Самовывоз':\r\n            return 'STORAGE'\r\n        case 'В доставке':\r\n            return 'AWAITING_DELIVERY'\r\n        case 'Доставлен и оплачен':\r\n            return 'DELIVERED_AND_PAID'\r\n        case 'Закрыт':\r\n            return 'CLOSED'\r\n\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport {trashSVG, uploadBtnSVG} from '../../assets/icons'\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value=[],imageCount=1,fileTypes=\"image/jpeg ,image/gif, image/png, image/svg+xml, application/pdf\"})=>{\r\n    const [files,setFiles] = useState([])\r\n    const [error,setError] = useState('')\r\n    useEffect(()=>{\r\n        setFieldValue(name,files)\r\n    },[files])\r\n    const createFile= async (url)=>{\r\n            await fetch(typeof url === 'object' ? url.imageUrl || url.imgUrl : url).then(async response=>{\r\n                let data = await response.blob();\r\n                let metadata = {type: data.type};\r\n                let file = new File([data],'file',metadata);\r\n                getBase64(file,(string)=> {setFiles(files=>[...files,{file: file, data_url : string}])})\r\n            });\r\n\r\n    }\r\n\r\n    const loadFiles = async ()=>{\r\n        if(typeof value === 'string' && value!==''){\r\n            await createFile(value)\r\n        }else if(Array.isArray(value) && value.length){\r\n            value.map(async url =>  await createFile(url))\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadFiles();\r\n        return ()=>setFiles([])\r\n    },[])\r\n    function getBase64(file, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: fileTypes,\r\n        onDrop: acceptedFiles => {\r\n                if(files.length>=imageCount) {\r\n                    setError(`Максимальное количество файлов: ${imageCount}`)\r\n                    return\r\n                }\r\n            for(let type in fileTypes){\r\n             if(type.split('application/') || type.split('image/')===acceptedFiles.type) {\r\n                 acceptedFiles.map(file => {\r\n                     getBase64(file,(string)=>{\r\n                         setFiles([...files,{file: file, data_url : string}])})})}\r\n                else{\r\n                    setError(`Загрузка файлов возможно только с типом: ${fileTypes}`)\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const deleteItem = index =>setFiles([...files.slice(0, index), ...files.slice(index + 1)])\r\n    const thumbs = files.map((file,index) =>{\r\n        return (\r\n        <div  key={index} className={'upload__image-container'}>\r\n            <div className=\"upload__image-item\">\r\n                <div className='upload__image-delete'><img src={trashSVG} onClick={()=>deleteItem(index)} alt=\"\"/></div>\r\n                {typeof file !== 'string' ?\r\n                    file?.file?.type.match('image') || file?.Url ?\r\n                        <img src={file?.data_url ? file?.data_url : file?.imgUrl} alt=\"\"/>\r\n                        : file.file.type.match('application/pdf')\r\n                        ? <span\r\n                            className={'upload__file-itemText'}>{file.file.type.toUpperCase().split('APPLICATION/')}</span>\r\n                        : <span></span>\r\n                    : <img src={file} alt=\"\"/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )})\r\n\r\n    return (\r\n        <div className=\"upload__image-wrapper\" onClick={()=>setError('')}>\r\n            <div {...getRootProps({className : 'upload__image-uploadBtn'})}>\r\n                <input {...getInputProps()} />\r\n                <img src={uploadBtnSVG} alt=\"\"/>\r\n                Нажмите или перетащите файл, чтобы загрузить\r\n            </div>\r\n            <div className={'upload__image-container'}>\r\n                {thumbs}\r\n            </div>\r\n            {error && <span className='formErrorMessage'>{error}</span>}\r\n        </div>\r\n    );\r\n    }\r\n export default ImgUploader\r\n","import React from 'react'\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\n\r\nconst PhoneInput = ({name,setFieldValue,placeholder,value})=>{\r\n    const onChange = (value)=>setFieldValue(name,value.replace(/[\\ \\(\\)\\-]/g, \"\"))\r\n    return(\r\n        <InputMask\r\n            mask=\"\\+\\9\\9\\6\\ (999) 99-99-99\"\r\n            placeholder={'+996 (___) __-__-__'}\r\n            name={name}\r\n            onChange={e=>onChange(e.target.value)}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default  PhoneInput","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n\r\nconst CheckInput = ({name,value,setFieldValue})=>{\r\n    const [checked,setCheck] = useState(value)\r\n    useEffect(()=>{\r\n        setFieldValue(name,checked)\r\n    },[checked])\r\n    return(\r\n        <label className=\"tableItem-checkbox-label\"\r\n               style={{marginTop: '15px'}}\r\n        >\r\n            <input className=\"tableItem-checkbox__default\" name={name}\r\n                   type=\"checkbox\"\r\n                   onChange={()=>setCheck(!checked)}\r\n               defaultChecked={value}\r\n               />\r\n            <span className=\"tableItem-checkbox__new\"></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default CheckInput","import React, {useEffect} from 'react'\r\nimport {toBeautifyFieldsValue} from \"../../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst SelectItem = props=>{\r\n\r\n    return (\r\n        typeof props.data === 'object' ?\r\n        <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data.id,props.data.name ?\r\n                                                props.data.name :\r\n                                                props.data.fullName)\r\n        }}>\r\n            {toBeautifyFieldsValue(props.data.name ? props.data.name : props.data.fullName ) }\r\n        </li>\r\n            :\r\n            <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data,props.data)\r\n            }}>\r\n                {toBeautifyFieldsValue(props.data)}\r\n            </li>\r\n\r\n    )\r\n}\r\nexport default SelectItem","import React, {useEffect, useRef} from 'react'\r\nimport SelectItem from \"./SelectItem\";\r\n\r\nconst SelectBlock = ({handleClick, setVisibleSelector, data})=> {\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e) => {\r\n        if (!selectorRef.current.contains(e.target)) {\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('click', closeSelector, false)\r\n        return () => {\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    }, [])\r\n\r\n    const elements = data.map((item,index) => <SelectItem key={index} data={item} handleClick={handleClick} />)\r\n    return (\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBlock","import React, {useEffect, useRef, useState} from 'react'\r\nimport {openList, plusSVG} from \"../../../assets/icons\";\r\nimport SelectBlock from \"./SelectBlock\";\r\n\r\n\r\n\r\nconst SelectField = ({data=[],name,value,setFieldValue,placeholder})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selectedValue,setSelectedValue] = useState('')\r\n    const selectedItem = (id,text)=>{\r\n        setFieldValue(name,id)\r\n        setSelectedValue(text)\r\n    }\r\n    useEffect(()=>{\r\n        data.map(item=>{\r\n            if(typeof item==='object'){\r\n                if(item.id===value){\r\n                    setSelectedValue(item?.name ? item.name : item.fullName)\r\n                }\r\n            }else{\r\n                if(item===value){\r\n                    setSelectedValue(item)\r\n                }\r\n            }\r\n        })\r\n    },[data])\r\n    return(\r\n        <div className={'selectorInput'} onClick={(event)=>setVisibleSelector(!visibleSelector)}>\r\n\r\n            <input type={'text'}\r\n                   readOnly\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   value={selectedValue}\r\n            />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"/>\r\n            {(visibleSelector && data.length!==0) && <SelectBlock data={data}  setVisibleSelector={setVisibleSelector} handleClick = {selectedItem}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectField\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Map, SearchControl, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n    const [place, setPlace] = React.useState({\r\n        id: props.value?.id || \"\",\r\n        city: props.value?.city || \"\",\r\n        country: props.value?.country || \"\",\r\n        region: props.value?.region || \"\",\r\n        street: props.value?.street || \"\",\r\n    });\r\n    const [address, setAddress] = React.useState(`${place.country} ${place.city} ${place.region} ${place.street}`);\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,place)\r\n    },[place])\r\n    const createPlacemark = (coords) => {\r\n\r\n        return new ymaps.current.Placemark(\r\n            coords,\r\n            {\r\n                iconCaption: \"Секунду...\"\r\n            },\r\n            {\r\n                preset: \"islands#violetDotIconWithCaption\",\r\n                draggable: false\r\n            },\r\n        );\r\n    };\r\n\r\n    const getAddress = (coords) => {\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            setPlace({\r\n                id: props.value?.id,\r\n                city: firstGeoObject.getLocalities()[0] || '',\r\n                country:firstGeoObject.getCountry() || '',\r\n                region: firstGeoObject.getAdministrativeAreas()[0] || '',\r\n                street: firstGeoObject.getThoroughfare() || ''\r\n            })\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <input type=\"text\" readOnly name={props.name} value={address}/>\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n\r\n\r\n                >\r\n                    <SearchControl options={{ float: 'right' }} />\r\n                </Map>\r\n\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport SelectorInput from \"../Inputs/SelectorInput/SelectorInput\";\r\nimport ImgUploader from \"../ImgUploader/ImgUploader\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport CheckInput from \"../Inputs/CheckInput/CheckInput\";\r\nimport SelectField from \"../Inputs/Selector/SelectField\";\r\nimport MapBlock from \"../Inputs/MapBlock/MapBlock\";\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                placeholder,\r\n                type='',\r\n               selectInputData=[],\r\n               selectorProperty,\r\n               options=[],\r\n                       clearSelectorData,\r\n                       fileTypes,\r\n                       imageCount,\r\n                       readOnly=false,\r\n    ...props\r\n                   })=>{\r\n    return(\r\n        <div className=\"createOrEditField\">\r\n            <label htmlFor={name}>{label}</label>\r\n            {type === 'selectInput' ?\r\n                <Field name={name} placeholder={placeholder}>\r\n                    {({field: {name, value}, form: {setFieldValue}}) => {\r\n                    return (\r\n                    <SelectorInput\r\n                    setFieldValue={setFieldValue}\r\n                    value={value}\r\n                    name={name}\r\n                    data={selectInputData}\r\n                    placeholder={placeholder}\r\n                    />\r\n                    )\r\n                }}\r\n                </Field>\r\n\r\n                : type==='phone' ?\r\n                    <Field name={name} >\r\n                     {({field:{name,value},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} value={value}/>}\r\n                    </Field>\r\n                        : type==='check' ?\r\n                            <Field   name={name} >\r\n                                {({field:{name,value},form: { setFieldValue}})=><CheckInput value={value} setFieldValue={setFieldValue} name={name} />}\r\n                          </Field>\r\n                : type==='selector' ?\r\n                            <Field name={name} placeholder={placeholder}>\r\n                                {({field: {name, value}, form: {setFieldValue}}) => {\r\n                                   return <SelectField\r\n                                       data={options[selectorProperty]}\r\n                                       setFieldValue={setFieldValue}\r\n                                       value={value}\r\n                                       name={name}\r\n                                       placeholder={placeholder}\r\n                                   />\r\n                                }}\r\n                                </Field>\r\n\r\n\r\n                : type==='textarea' ?\r\n                    <Field name={name} as={'textarea'} placeholder={placeholder} />\r\n\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              fileTypes={fileTypes}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name} >\r\n              {({field:{name,value},form: { setFieldValue}}) => <MapBlock\r\n                                                                setFieldValue={setFieldValue}\r\n                                                                value={value}\r\n                                                                name={name}/>}\r\n                </Field>\r\n                :\r\n                         <Field name={name} placeholder={placeholder} readOnly={readOnly} />\r\n\r\n            }\r\n\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik, useFormikContext} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = Object.keys(props.initialVals).map((item,index)=>{\r\n        return(\r\n            <FormInput\r\n                key={item}\r\n                name={item}\r\n                placeholder={props.inputConfig[index]?.placeholder}\r\n                label={props.inputConfig[index]?.label}\r\n                type={props.inputConfig[index]?.type}\r\n                selectInputData={props.inputConfig[index]?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={props.inputConfig[index]?.selectorProperty}\r\n                fileTypes={props.inputConfig[index]?.fileTypes}\r\n                imageCount={props.inputConfig[index]?.imageCount}\r\n                readOnly={props.inputConfig[index]?.readonly}\r\n            />\r\n        )\r\n    })\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            {props.formTitle &&\r\n            <div className={'createOrEditContainer__title'}>\r\n                <Link to={props.urlToTable}><img src={backSVG} alt=\"\"/></Link>\r\n                <h2>{props.formTitle}</h2>\r\n            </div>\r\n            }\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values)=>{\r\n                  await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n\r\n                    return (\r\n                    <Form>\r\n                        {inputs}\r\n                        <div className={\"createOrEditContainer__btns\"}>\r\n                            <EditBtn\r\n\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                        <CancelBtn urlToTable={props.urlToTable}/>\r\n                        </div>\r\n                    </Form>\r\n                )}}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default Former","import * as Yup from \"yup\";\r\n\r\nexport const validationGenerator = (key, config)=>{\r\n    let schema = {}\r\n    key.map((item,index)=> {\r\n        if(config[index]?.dataType) {\r\n            switch (config[index].dataType) {\r\n                case 'number':\r\n                    schema[item] = Yup.number();\r\n                    break;\r\n                default:\r\n                    schema[item] = Yup.string()\r\n            }\r\n        }\r\n            else{\r\n                schema[item] = Yup.string()\r\n            }\r\n\r\n\r\n\r\n        if(config[index]?.required){\r\n            schema[item] =  schema[item].required(config[index].required)\r\n        }\r\n        if(config[index]?.min){\r\n            schema[item] =  schema[item].min(config[index].min)\r\n        }\r\n        if(config[index]?.max){\r\n            schema[item] =  schema[item].min(config[index].max)\r\n        }\r\n        if(config[index]?.nullable){\r\n            schema[item] =  schema[item].nullable(config[index].nullable)\r\n        }\r\n    })\r\n    return schema\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id) {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n        return ()=>{\r\n            if(props.clearSelectorData) {\r\n                for(let i=0;i<props.clearSelectorData.length;i++){\r\n                    props.clearSelectorData[i]()\r\n                }\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n    console.log(match)\r\n    return(\r\n        (!isLoading && props.valueById && match.params.id) || (!isLoading && !props.valueById && !match.params.id)\r\n        || match.path === \"/settings\"\r\n            ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n        : <Preloader />\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","import React, {useEffect, useRef, useState} from 'react'\r\nimport Header from \"../Header/Header\";\r\nimport SidebarList from \"../Sidebar/SidebarList\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport Table from \"../Table/Table\";\r\nimport RecordViewerContainer from \"../RecordViewer/RecordViewerContainer\";\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n    isLoading,\r\n    hasData,\r\n    clearTable,\r\n    recordViewValuesConfig,\r\n    clearSelectorData,\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n                      })=>{\r\n    const clickOnRecord=(id)=>history.push(`/${pageUrl}/view/${id}`)\r\n    return(\r\n        <>\r\n                    <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n                            <h2 className='page-content__title'>{pageTitle}</h2>\r\n\r\n                            <Table\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                                adding={adding}\r\n                                urlToCreate = {`/${pageUrl}/${pageUrl}-creator`}\r\n                                deleteFunc = {deleteFunc}\r\n                                hasData={hasData}\r\n                                clearTable={clearTable}\r\n                            />\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                clearSelectorData={clearSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                isLoading={isLoading}\r\n\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                clearSelectorData={clearSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        <Route path={`/${pageUrl}/view/:id`}>\r\n                            <RecordViewerContainer\r\n                                titles={recordViewTitlesConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n                                urlToTable={`/${pageUrl}`}\r\n\r\n\r\n                                recordViewValuesConfig={recordViewValuesConfig}\r\n                                valueById={valueById}\r\n                                getByIdFunc={getByIdFunc}\r\n                                clearFunc={clearFunc}\r\n                                isLoading={isLoading}\r\n\r\n                                editing={editing}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PageRenderer)","import React from \"react\";\r\nexport const OrderColumns  =[\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'orderStatus',\r\n        render: (value)=>\r\n            value==='Ожидает доставку'  || value ==='Оплачен, ожидает доставку' ?\r\n            <span style={{background: '#FF6800',color: '#f2f2f2',borderRadius: '5px',padding: '3px',margin: '3px 0'}}>{value}</span>\r\n            :value==='Доставлен' || value === 'Доставлен и оплачен' ? <span style={{background: '#009B00',color: '#f2f2f2',borderRadius: '5px',padding: '3px'}}>{value}</span>\r\n            :value==='Закрыт' ? <span style={{background: '#fff',color: '#000',borderRadius: '5px',padding: '3px'}}>{value}</span> : value\r\n\r\n        }\r\n\r\n]","export const recordViewOrderConfig  =[\r\n    {\r\n        title: \"Номер заказа\",\r\n        dataIndex: 'orderNumber'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n      title: \"Заказчик\",\r\n      dataIndex: 'client'\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'product',\r\n    },\r\n    {\r\n        title: \"Сумма\",\r\n      dataIndex: 'totalPrice'\r\n    },\r\n    {\r\n        title: \"Адрес доставки\",\r\n        dataIndex: 'deliveryAddress',\r\n    },\r\n    {\r\n        title: \"Тип доставки\",\r\n        dataIndex: 'deliveryType',\r\n    },\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType',\r\n    },\r\n    {\r\n        title: \"Адрес склада\",\r\n        dataIndex: 'storageAddress',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'cashPaymentOrderStatus',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'orderStatus',\r\n    },\r\n\r\n]","import {addressData} from \"../../components/Inputs/SelectorInput/data/addressData\";\r\n\r\nexport const orderInputConfig = [\r\n    {\r\n        label: 'Имя',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Фамилия',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Номер телефона',\r\n        readonly: true\r\n    },\r\n    {\r\n    label: \"Адрес доставки\",\r\n   placeholder: \"Бишкек Советская Боконбаева\",\r\n    readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Тип доставки\",\r\n        placeholder: \"Самовывоз/Курьер\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'deliveryType',\r\n    },\r\n    {\r\n        label: \"Дата заказа\",\r\n        readonly: true\r\n    },\r\n    {\r\n        label: \"Тип оплаты\",\r\n        placeholder: \"Эльсом/Наличные\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'paymentType',\r\n    },\r\n    {\r\n        label: \"Адрес склада\",\r\n        placeholder: \"Бишкек Советская Боконбаева\",\r\n        readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Статус заказа\",\r\n        placeholder: \"Выберите статус\",\r\n        type: 'selector',\r\n        selectorProperty: 'status',\r\n    }\r\n   ]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearOrder, getOrderById, createOrder, deleteOrder, getOrders, updateOrder, clearOrders\r\n} from \"../../redux/reducers/orderReducer\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {OrderColumns} from \"../../configs/Orders/tableColumnsConfig\";\r\nimport {recordViewOrderConfig} from \"../../configs/Orders/recordViewConfig\";\r\nimport {orderInputConfig} from \"../../configs/Orders/inputFormConfig\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst OrdersPage = ({orders,orderById,clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder,...props})=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'orders'}\r\n            pageTitle ={'Заказы'}\r\n\r\n            tableData={orders}\r\n            tableColumnsConfig={OrderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewOrderConfig}\r\n            recordViewValuesConfig={{\r\n                orderNumber: orderById?.orderNumber,\r\n                client: <div>{orderById?.lastName} {orderById?.firstName}  | {orderById?.phoneNumber}</div>,\r\n                orderStatus: orderById?.orderStatus ,\r\n                deliveryAddress:orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                elsomPaymentOrderStatus: orderById?.elsomPaymentOrderStatus,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                product:  orderById?.products?.map(item=>{\r\n                    return <div><span>{item.product.name}</span>  <span>{`${item.amount}  ${item.product?.measureUnitResponse?.name}`}</span>  <span> {`${item.totalPrice} ${toBeautifyFieldsValue(item?.product?.currency)}`}  </span></div>\r\n                }),\r\n                totalPrice: orderById?.orderTotalPrice\r\n            }}\r\n\r\n            optionsForSelectorData={{\r\n                status:  [ 'AWAITING_DELIVERY','DELIVERED_AND_PAID','PAID_AWAITNG_DELIVERY', 'DELIVERED', 'CLOSED'],\r\n                deliveryType: ['COURIER', 'STORAGE'],\r\n                paymentType: ['ELSOM','CASH']\r\n\r\n            }}\r\n            formInputsConfig ={orderInputConfig}\r\n            creatorTitle={'Создание заказа'}\r\n            updaterTitle={'Редактирование заказа'}\r\n           adding={false}\r\n            updaterInitialFormValues={{\r\n                firstName: orderById?.firstName,\r\n                lastName: orderById?.lastName,\r\n                phoneNumber: orderById?.phoneNumber,\r\n                deliveryAddress: orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                orderStatus: orderById?.orderStatus,\r\n\r\n            }}\r\n\r\n            getDataFunc={getOrders}\r\n            valueById={orderById}\r\n            getByIdFunc={getOrderById}\r\n            createFunc={createOrder}\r\n            updateFunc={updateOrder}\r\n            clearFunc={clearOrder}\r\n            deleteFunc={deleteOrder}\r\n            isLoading={props.orderFetchLoader}\r\n            hasData={props.hasOrders}\r\n            clearTable = {props.clearOrders}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orders: state.order.orders,\r\n        orderById: state.order.orderById,\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        hasOrders: state.order.hasOrders\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        clearOrder,\r\n        getOrderById,\r\n        createOrder,\r\n        deleteOrder,\r\n        getOrders,\r\n        updateOrder,clearOrders\r\n    }\r\n)(OrdersPage)\r\n","import {CLEAR_USERS, DELETED_USER, SEARCHING, USER_TOGGLE_FETCH_LOADER, WRITE_USER_BY_ID, WRITE_USERS} from './types'\r\nimport {\r\n\r\n    userDelByIdReq,\r\n    userGetByIdReq, usersGetReq, userUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    users: [],\r\n    userById: {},\r\n    hasUsers: true,\r\n    userFetchLoader: false\r\n}\r\n\r\n\r\nexport const userReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_USERS:\r\n            return{\r\n                ...state,\r\n                users: [...state.users,...action.payload],\r\n                hasUsers: checkHasData(action.payload)\r\n            }\r\n        case USER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                userFetchLoader: action.payload\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                hasUsers: true\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                hasUsers: true,\r\n\r\n            }\r\n        case WRITE_USER_BY_ID:\r\n            return{\r\n                ...state,\r\n                userById: action.payload\r\n            }\r\n        case DELETED_USER:\r\n            return{\r\n                ...state,\r\n                users: updateItemInStore(state.users,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: WRITE_USER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const userToggleLoader = bool=>{\r\n    return{\r\n        type: USER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearUsers = ()=>{\r\n    return{\r\n        type: CLEAR_USERS\r\n    }\r\n}\r\nexport const getUsers = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, usersGetReq, WRITE_USERS, userToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getUserById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, userGetByIdReq, WRITE_USER_BY_ID, userToggleLoader,id,toggleNotification)\r\n}\r\nexport const deleteUser = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,userDelByIdReq,id[i],userToggleLoader,DELETED_USER,toggleNotification)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (data,id)=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,userUpdReq,data,userToggleLoader,id)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport const UsersColumns  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n\r\n]","export const recordViewUserConfig  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n    {\r\n        title: \"Отчество\",\r\n        dataIndex: 'middleName',\r\n    },\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'address',\r\n    },\r\n    // {\r\n    //     title: \"Фото пасспорта\",\r\n    //     dataIndex: 'passport',\r\n    // },\r\n    // {\r\n    //     title: \"Фото сертификата\",\r\n    //     dataIndex: 'sertificate',\r\n    // },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearUser, clearUsers, deleteUser, getUserById, getUsers} from \"../../redux/reducers/userReducer\";\r\nimport {UsersColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {recordViewUserConfig} from \"../../configs/Users/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({   users,\r\n                            userById,\r\n                            getUsers,\r\n                            getUserById,\r\n                            deleteUser,\r\n                            clearUser,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'users'}\r\n            pageTitle ={'Пользователи'}\r\n\r\n            tableData={users}\r\n            tableColumnsConfig={UsersColumns}\r\n\r\n            recordViewTitlesConfig={recordViewUserConfig}\r\n\r\n\r\n\r\n            getDataFunc={getUsers}\r\n            valueById={userById}\r\n            getByIdFunc={getUserById}\r\n            clearFunc={clearUser}\r\n            deleteFunc={deleteUser}\r\n            adding={false}\r\n            editing={false}\r\n            isLoading={props.userFetchLoader}\r\n            hasData={props.hasUsers}\r\n            clearTable = {props.clearUsers}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        hasUsers: state.user.hasUsers\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        getUserById,\r\n        deleteUser,\r\n        clearUser,clearUsers\r\n    }\r\n)(CategoriesPage)\r\n","import React from \"react\";\r\n\r\nexport const ProductColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Категория\",\r\n        dataIndex: 'category',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Поставщик\",\r\n        dataIndex: 'supplier',\r\n        object: 'fullName'\r\n    },\r\n]","export const recordViewProductConfig  =[{\r\n    title: \"Название товара\",\r\n        dataIndex: 'name',\r\n},\r\n{\r\n    title: \"Категория товара\",\r\n        dataIndex: 'category',\r\n},\r\n    {\r\n        title: \"Поставщик товара\",\r\n        dataIndex: 'supplier',\r\n    },\r\n\r\n{\r\n    title: \"Описание\",\r\n        dataIndex: 'description',\r\n},\r\n{\r\n    title: \"Цена товара\",\r\n        dataIndex: 'price',\r\n},\r\n{\r\n    title: \"Количество товара\",\r\n        dataIndex: 'measure',\r\n},\r\n    {\r\n        title: \"Фото товара\",\r\n        dataIndex: 'images',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: 'Рейтинг товара',\r\n        dataIndex: 'raiting',\r\n\r\n    },\r\n    {\r\n        title: 'Количество покупок',\r\n        dataIndex: 'boughtCount'\r\n    },\r\n    {\r\n        title: 'Комментарии',\r\n        dataIndex: 'comments'\r\n    }\r\n\r\n    ]","export const productInputConfig = [\r\n    {\r\n        label: \"Название товара\",\r\n        placeholder: \"Картошка\",\r\n        required: 'Введите название товара',\r\n    },\r\n    {\r\n        label: \"Категория товара\",\r\n        placeholder: \"Выберите категорию товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        required: 'Выберите категорию товара',\r\n        nullable: true,\r\n    },\r\n    {\r\n        label: \"Поставщик товара\",\r\n        placeholder: \"Выберите поставщика товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'provider',\r\n        nullable: true,\r\n        required: 'Выберите поставщика товара',\r\n\r\n    },\r\n\r\n    {\r\n        label: \"Описание товара\",\r\n        placeholder: \"Самый вкусный картофель\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Цена товара\",\r\n        placeholder: \"30 сом/кг\",\r\n        dataType: 'number',\r\n        required: 'Укажите цену товара',\r\n    },\r\n    {\r\n        label: \"Валюта\",\r\n        type: 'selector',\r\n        selectorProperty: 'currency',\r\n        nullable: true,\r\n        placeholder: \"сом\",\r\n        required: 'Укажите валюту',\r\n    },\r\n    {\r\n        label: \"Количество товара\",\r\n        placeholder: \"100500\",\r\n        dataType: 'number',\r\n        required: 'Укажите количество товара',\r\n    },\r\n    {\r\n        label: \"Ед.измерения\",\r\n        type: 'selector',\r\n        selectorProperty: 'units',\r\n        nullable: true,\r\n        placeholder: \"кг\",\r\n        required: 'Укажите ед.измерения',\r\n    },\r\n    {\r\n        label: \"Фото товара\",\r\n        type: 'image',\r\n        fileTypes:'image/jpeg,image/png',\r\n        imageCount: 6,\r\n        required: 'Загрузите изображение'\r\n    },\r\n\r\n    ]\r\n\r\n","export const toClearImageArray = data => {\r\n    return data.length!==0 ? data.map(item=>item?.file ? item.file: item) : null\r\n}","import {\r\n    WRITE_PRODUCTS,\r\n    WRITE_PRODUCT_BY_ID,\r\n    WRITE_RAITING_BY_ID,\r\n    SEARCHING,\r\n    WRITE_MEASURE_UNITS,\r\n    PRODUCT_TOGGLE_FETCH_LOADER, DELETED_CATEGORY, DELETED_PRODUCT, CLEAR_PRODUCTS,\r\n} from './types'\r\nimport {\r\n    productsGetReq,\r\n    productPostReq,\r\n    productUpdReq,\r\n    productDelByIdReq,\r\n    productImgPostReq,\r\n    productGetByIdReq, productImgUpdReq,  measureUnitGetReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleLoader, toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    products: [],\r\n    productById: {},\r\n    ratingById: undefined,\r\n    hasProducts: true,\r\n    measureUnits: [],\r\n    productFetchLoader: false\r\n\r\n}\r\n\r\n\r\nexport const productReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                productFetchLoader: action.payload\r\n            }\r\n        case WRITE_MEASURE_UNITS:\r\n            return{\r\n                ...state,\r\n                measureUnits: action.payload,\r\n            }\r\n        case WRITE_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                products: [...state.products,...action.payload],\r\n                hasProducts: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: [],\r\n                hasProducts: true,\r\n                productFetchLoader: false\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                products: [],\r\n                hasProducts: true\r\n            }\r\n        case WRITE_PRODUCT_BY_ID:\r\n            return{\r\n                ...state,\r\n                productById: action.payload\r\n            }\r\n        case WRITE_RAITING_BY_ID:\r\n            return{\r\n                ...state,\r\n                ratingById: action.payload\r\n            }\r\n        case DELETED_PRODUCT:\r\n            return{\r\n                ...state,\r\n                products: updateItemInStore(state.products,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const productToggleLoader = bool=>{\r\n    return{\r\n        type: PRODUCT_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const clearProducts = ()=>{\r\n    return{\r\n        type: CLEAR_PRODUCTS\r\n    }\r\n}\r\nexport const clearProduct = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        payload: {}\r\n    }\r\n}\r\nexport const getMeasureUnits = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,measureUnitGetReq,WRITE_MEASURE_UNITS,toggleLoader,toggleNotification)\r\n}\r\nexport const getProducts = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, productsGetReq, WRITE_PRODUCTS, productToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getProductById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, productGetByIdReq, WRITE_PRODUCT_BY_ID, productToggleLoader,id,toggleNotification)\r\n}\r\nexport const createProduct = data=>{\r\n    return async dispatch => {\r\n            dispatch(productToggleLoader(true))\r\n            await productPostReq(data)\r\n                .then(async resp => {\r\n                    if (data.images) {\r\n                        const formData = new FormData()\r\n                        toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                        formData.append('productId', resp.data.result.id)\r\n                        await productImgPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                            isOpen: true,\r\n                            title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                            body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                        })))\r\n                            .catch(() => dispatch(toggleNotification({\r\n                                isOpen: true,\r\n                                title: 'Ошибка!',\r\n                                body:  'Запись не добавлена!'\r\n                            })))\r\n                    }\r\n                })\r\n            dispatch(productToggleLoader(false))\r\n    }\r\n}\r\nexport const deleteProduct = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,productDelByIdReq,id[i],productToggleLoader,DELETED_PRODUCT,toggleNotification)\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateProduct = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(productToggleLoader(true))\r\n        await productUpdReq(data,id)\r\n            .then( async resp=>{\r\n                if(data.images) {\r\n                    const formData = new FormData()\r\n                    toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                    formData.append('productId', resp.data.result.id)\r\n                    await productImgPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                        body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n                    })))\r\n                        .catch(() => dispatch(toggleNotification({\r\n                            isOpen: true,\r\n                            title: 'Ошибка!',\r\n                            body:  'Запись не изменена!'\r\n                        })))\r\n                }\r\n            })\r\n\r\n        dispatch(productToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import {providerImgPostReq} from \"../api/Request\";\r\n\r\n\r\nexport const formDataProviderTemplate = async (id,data,key)=>{\r\n    const formData = new FormData()\r\n    formData.append('supplierId', id)\r\n    formData.append('supplierFileType', key)\r\n    data[key].map(item=>formData.append('images',item.file))\r\n    await providerImgPostReq(formData)\r\n}","import {\r\n    WRITE_PROVIDER,\r\n    WRITE_PROVIDER_BY_ID,\r\n    WRITE_ACTIVE_PROVIDERS,\r\n    DELETED_PROVIDER, SEARCHING, PROVIDER_TOGGLE_FETCH_LOADER, CLEAR_PROVIDERS,\r\n} from './types'\r\nimport {\r\n    providerGetByIdReq,\r\n    providersGetReq,\r\n    providerPostReq,\r\n    providerUpdReq,\r\n    providerDelByIdReq,\r\n    providerActiveGetReq, providerPlaceOfProductionPostReq, providerPlaceOfProductionUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {formDataProviderTemplate} from \"../../utils/templates/formDataTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    providers: [],\r\n    providerById: {},\r\n    activeProviders: [],\r\n    hasProvider: true,\r\n    providerFetchLoader: false\r\n}\r\n\r\n\r\nexport const providerReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PROVIDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                providerFetchLoader: action.payload\r\n            }\r\n        case WRITE_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: [...state.providers,...action.payload],\r\n                hasProvider: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_PROVIDERS:\r\n            return {\r\n                ...state,\r\n                providers: [],\r\n                hasProvider: true,\r\n\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                providers: [],\r\n                hasProvider: true\r\n            }\r\n        case WRITE_PROVIDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                providerById: action.payload\r\n            }\r\n        case WRITE_ACTIVE_PROVIDERS:\r\n            return{\r\n                ...state,\r\n                activeProviders: action.payload\r\n            }\r\n\r\n        case DELETED_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: updateItemInStore(state.providers,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearProvider = ()=>{\r\n    return{\r\n        type: WRITE_PROVIDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const clearProviders = ()=>{\r\n    return{\r\n        type: CLEAR_PROVIDERS\r\n    }\r\n}\r\nexport const clearActiveProviders = ()=>{\r\n    return{\r\n        type: WRITE_ACTIVE_PROVIDERS,\r\n        payload: []\r\n    }\r\n}\r\nexport const providerToggleLoader = bool=>{\r\n    return{\r\n        type: PROVIDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getActiveProviders = (page)=>{\r\n    return async dispatch => getTemplate(dispatch,providerActiveGetReq,WRITE_ACTIVE_PROVIDERS,providerToggleLoader,page,toggleNotification)\r\n}\r\nexport const getProviders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, providersGetReq, WRITE_PROVIDER, providerToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getProviderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, providerGetByIdReq, WRITE_PROVIDER_BY_ID, providerToggleLoader,id,toggleNotification)\r\n}\r\nexport const createProvider = (data)=>{\r\n        return async dispatch => {\r\n            dispatch(providerToggleLoader(true))\r\n            await providerPlaceOfProductionPostReq(data.placeOfProduction).then(async res=> {\r\n                const newData = data\r\n                newData['placeOfProductionId'] = res.data.result.id\r\n                await providerPostReq(newData)\r\n                    .then(resp => {\r\n                        if(data.PASSPORT.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'PASSPORT')\r\n                        }\r\n                        if(data.SERTIFICATE.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'SERTIFICATE')\r\n                        }\r\n                        if(data.CONTRACT.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'CONTRACT')\r\n                        }\r\n                    }).then(response=>dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                        body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                    })))\r\n                    .catch(() => dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: 'Ошибка!',\r\n                        body:  'Запись не добавлена!'\r\n                    })))\r\n                dispatch(providerToggleLoader(false))\r\n            })\r\n        }\r\n}\r\nexport const deleteProvider = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,providerDelByIdReq,id[i],providerToggleLoader,DELETED_PROVIDER,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateProvider = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(providerToggleLoader(true))\r\n        await providerPlaceOfProductionUpdReq(data.placeOfProduction,data.placeOfProduction.id).then(async res=> {\r\n            const newData = data\r\n            newData['placeOfProductionId'] = res.data.result.id\r\n            await providerUpdReq(newData,id)\r\n                .then(resp => {\r\n                    if(data.PASSPORT.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'PASSPORT')\r\n                    }\r\n                    if(data.SERTIFICATE.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'SERTIFICATE')\r\n                    }\r\n                    if(data.CONTRACT.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'CONTRACT')\r\n                    }\r\n                }).then(response=>dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                    body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n                })))\r\n                .catch(() => dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: 'Ошибка!',\r\n                    body:  'Запись не изменена!'\r\n                })))\r\n            dispatch(providerToggleLoader(false))\r\n        })\r\n    }\r\n}\r\n\r\n","import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    DELETED_CATEGORY,\r\n    SEARCHING, CATEGORY_TOGGLE_FETCH_LOADER, CLEAR_CATEGORIES\r\n} from './types'\r\nimport {\r\n    categoryDelByIdReq,\r\n    categoryGetByIdReq,\r\n     categoryGetSearchReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    searchedCategories: [],\r\n    hasCategories: true,\r\n    categoryFetchLoader: false\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case CATEGORY_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                categoryFetchLoader: action.payload\r\n            }\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: [...state.categories,...action.payload],\r\n                hasCategories: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [],\r\n                hasCategories: true,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                categories: [],\r\n                hasCategories: true\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n        case DELETED_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearCategories = ()=>{\r\n    return{\r\n        type: CLEAR_CATEGORIES\r\n    }\r\n}\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n    }\r\n}\r\nexport const categoryToggleLoader = bool=>{\r\n    return{\r\n        type: 'CATEGORY_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getCategory = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, categoryGetSearchReq, WRITE_CATEGORIES, categoryToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, categoryToggleLoader,id,toggleNotification)\r\n}\r\nexport const createCategory = data=>{\r\n        return async dispatch => {\r\n                dispatch(categoryToggleLoader(true))\r\n                const formData = new FormData()\r\n                formData.append('categoryRequest', new Blob([JSON.stringify({\r\n                    \"name\": `${data.name}`,\r\n                    \"description\": data.description,\r\n                    \"parentCategoryId\": data.parentCategoryId\r\n                })], {type: \"application/json\"}));\r\n                if (toClearImageArray(data.image) !== null && data.parentCategoryId===null) {\r\n                    toClearImageArray(data.image).map(item => formData.append('image', item))\r\n                } else {\r\n                    formData.append('image', null)\r\n                }\r\n                await categoryPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                    body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                })))\r\n                    .catch(() => dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: 'Ошибка!',\r\n                        body:  'Запись не добавлена!'\r\n                    })))\r\n                dispatch(categoryToggleLoader(false))\r\n        }\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n          await deleteTemplate(dispatch,categoryDelByIdReq,id[i],categoryToggleLoader,DELETED_CATEGORY,toggleNotification)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(categoryToggleLoader(true))\r\n        const formData = new FormData()\r\n        formData.append('categoryRequest', new Blob([JSON.stringify({\r\n            \"id\": data.id,\r\n            \"name\": `${data.name}`,\r\n            \"description\": data.description,\r\n            \"parentCategoryId\": data.parentCategoryId\r\n        })], {type: \"application/json\"}));\r\n\r\n        if (toClearImageArray(data.image) !== null && data.parentCategoryId===null) {\r\n            toClearImageArray(data.image).map(item => formData.append('image', item))\r\n        } else {\r\n            formData.append('image', null)\r\n        }\r\n        await categoryUpdReq(formData,id)\r\n            .then(response=>dispatch(toggleNotification({\r\n                isOpen: true,\r\n                title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n            })))\r\n            .catch(() => dispatch(toggleNotification({\r\n                isOpen: true,\r\n                title: 'Ошибка!',\r\n                body:  'Запись не изменена!'\r\n            })))\r\n        dispatch(categoryToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\n\r\n\r\nimport {ProductColumns} from \"../../configs/Products/tableColumnsConfig\";\r\nimport {recordViewProductConfig} from \"../../configs/Products/recordViewConfig\";\r\nimport {productInputConfig} from \"../../configs/Products/inputFormConfig\";\r\nimport {\r\n    clearProduct, clearProducts,\r\n    createProduct,\r\n    deleteProduct, getMeasureUnits,\r\n    getProductById,\r\n    getProducts,\r\n    updateProduct\r\n} from \"../../redux/reducers/productReducer\";\r\nimport {clearActiveProviders, getActiveProviders} from \"../../redux/reducers/providerReducer\";\r\nimport {clearCategories, getCategory} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\nconst ProductsPage = ({   products,\r\n                          productById,\r\n                          ratingById,\r\n                          getProducts,\r\n                          getProductById,\r\n                          createProduct,\r\n                          updateProduct,\r\n                          deleteProduct,\r\n                          clearProduct,\r\n                          categories,\r\n                          activeProviders,\r\n                          getCategory,\r\n                          getActiveProviders,\r\n                          hasProducts,\r\n                          measureUnits,\r\n                          getMeasureUnits,\r\n    ...props\r\n                      })=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'products'}\r\n            pageTitle ={'Товары'}\r\n\r\n            tableData={products}\r\n            tableColumnsConfig={ProductColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProductConfig}\r\n\r\n            creatorTitle={'Создание товара'}\r\n            updaterTitle={'Редактирование товара'}\r\n            formInputsConfig={productInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : [],\r\n                provider: activeProviders  ? [...activeProviders] : [],\r\n                currency: ['SOM','USD'],\r\n                units: measureUnits  ?  [...measureUnits] : []\r\n            }}\r\n            recordViewValuesConfig={{\r\n                name: productById?.name,\r\n                category: productById?.category?.name,\r\n                supplier: productById?.supplier?.fullName,\r\n                description: productById?.description,\r\n                price: `${productById?.price} ${productById?.currency}`,\r\n                measure: `${productById?.measure} ${productById?.measureUnitResponse?.name}`,\r\n                images: productById?.productImages?.map(item=>item.imageUrl),\r\n                boughtCount: productById?.boughtCount,\r\n                raiting: productById?.raiting,\r\n                comments: productById?.comment?.map(item=>{\r\n                    return <div><span>{`${item.client?.lastName} ${item.client?.firstName} ${item.client?.middleName}`}</span>\r\n                        <span>{item.client?.email}</span>  <span> {item.comment} </span></div>\r\n                })\r\n\r\n            }}\r\n            loadSelectorData={[getCategory,getActiveProviders,getMeasureUnits]}\r\n            clearSelectorData = {[props.clearCategories,props.clearActiveProviders]}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                categoryId: null,\r\n                supplierId: null,\r\n                description: '',\r\n                price: 0,\r\n                currency: '',\r\n                measure: 0,\r\n                measureUnitId: 0,\r\n                images: []\r\n            }}\r\n            updaterInitialFormValues={{\r\n                name: productById?.name,\r\n                categoryId: productById?.category?.id,\r\n                supplierId: productById?.supplier?.id,\r\n                description: productById?.description,\r\n                price: productById?.price,\r\n                currency: productById?.currency,\r\n                measure: productById?.measure,\r\n                measureUnitId: productById?.measureUnitResponse?.id,\r\n                images: productById?.productImages?.map(item=>item.imageUrl)\r\n            }}\r\n            getDataFunc={getProducts}\r\n            valueById={productById}\r\n            getByIdFunc={getProductById}\r\n            createFunc={createProduct}\r\n            updateFunc={updateProduct}\r\n            clearFunc={clearProduct}\r\n            deleteFunc={deleteProduct}\r\n            hasData={hasProducts}\r\n            isLoading={props.productFetchLoader}\r\n            clearTable = {props.clearProducts}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        products: state.product.products,\r\n        hasProducts: state.product.hasProducts,\r\n        productById: state.product.productById,\r\n        ratingById: state.product.ratingById,\r\n        categories: state.category.categories,\r\n        activeProviders: state.provider.activeProviders,\r\n        measureUnits : state.product.measureUnits,\r\n        productFetchLoader: state.product.productFetchLoader,\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getActiveProviders,\r\n        getProducts,\r\n        getProductById,\r\n        createProduct,\r\n        updateProduct,\r\n        deleteProduct,\r\n        clearProduct,\r\n        getMeasureUnits,\r\n        clearProducts,\r\n        clearCategories,\r\n        clearActiveProviders\r\n    }\r\n)(ProductsPage)\r\n","\r\nexport const providerInputConfig = [\r\n    {\r\n    label: \"ФИО\",\r\n    placeholder: \"Анисимова Виктория Викторовна\",\r\n    required: \"Укажите имя поставщика\",\r\n    },\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"+(999) 00-00-00\",\r\n        required: \"Укажите телефон поставщика\",\r\n        type: 'phone'\r\n    },\r\n    {\r\n        label: \"E-mail\",\r\n        placeholder: \"example@gmail.com\",\r\n    },\r\n    {\r\n        label: \"Адрес\",\r\n        placeholder: \"Чуйская область Бишкек\",\r\n        type: 'map',\r\n        required: \"Укажите адрес поставщика\",\r\n    },\r\n    {\r\n        label: \"Товары\",\r\n        placeholder: \"Картошка,...\",\r\n        required: \"Укажите товары поставщика\",\r\n    },\r\n    {\r\n        label: \"Банковский счет\",\r\n        placeholder: \"40702810500000000001\",\r\n    },\r\n    {\r\n        label: \"Фото паспорта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 2\r\n    },\r\n    {\r\n        label: \"Фото сертификата\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Фото контракта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Статус\",\r\n        type: 'check'\r\n    },\r\n\r\n    ]","import {badStatusSVG, goodStatusSVG} from \"../../assets/icons\";\r\nimport React from \"react\";\r\n\r\nexport const ProviderColumns  =[\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'isActive',\r\n        render: (value)=>value? <img src={goodStatusSVG} /> : <img src={badStatusSVG} alt=\"\"/>\r\n    }\r\n]","export const recordViewProviderConfig  =[\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n    },\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'produces',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'placeOfProduction',\r\n    },\r\n    {\r\n        title: \"Фото паспорта\",\r\n        dataIndex: 'PASSPORT',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: \"Фото сертификата\",\r\n        dataIndex: 'SERTIFICATE',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: \"Фото контракта\",\r\n        dataIndex: 'CONTRACT',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearProvider, clearProviders,\r\n    createProvider,\r\n    deleteProvider, getProviderById,\r\n    getProviders,\r\n    updateProvider\r\n} from \"../../redux/reducers/providerReducer\";\r\nimport {providerInputConfig} from \"../../configs/Providers/inputFormConfig\";\r\nimport {ProviderColumns} from \"../../configs/Providers/tableColumnsConfig\";\r\nimport {recordViewProviderConfig} from \"../../configs/Providers/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst ProvidersPage = ({providers,providerById,getProviders,getProviderById,createProvider,updateProvider,deleteProvider,clearProvider,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'providers'}\r\n            pageTitle ={'Поставщики'}\r\n\r\n            tableData={providers}\r\n            tableColumnsConfig={ProviderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProviderConfig}\r\n            recordViewValuesConfig={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction:  <span>\r\n                    {providerById?.placeOfProduction?.country}\r\n                    <br/>\r\n                        {providerById?.placeOfProduction?.region}\r\n                        <br/>{providerById?.placeOfProduction?.city}<br/>\r\n                            {providerById?.placeOfProduction?.street}\r\n                        </span>,\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT' ? item.imgUrl : 'Нет фото/документа'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE' ? item.imgUrl : 'Нет фото/документа'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT' ? item.imgUrl : 'Нет фото/документа'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            creatorTitle={'Создание поставщика'}\r\n            updaterTitle={'Редактирование поставщика'}\r\n            formInputsConfig={providerInputConfig}\r\n            creatorInitialFormValues={{\r\n                fullName: '',\r\n                phone: '',\r\n                email: '',\r\n                placeOfProduction: {},\r\n                produces: '',\r\n                walletNumber: '',\r\n                PASSPORT: [],\r\n                SERTIFICATE: [],\r\n                CONTRACT: [],\r\n                isActive: false\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction: {\r\n                    id: providerById?.placeOfProduction?.id,\r\n                    country: providerById?.placeOfProduction?.country,\r\n                    city: providerById?.placeOfProduction?.city,\r\n                    region: providerById?.placeOfProduction?.region,\r\n                    street: providerById?.placeOfProduction?.street\r\n                },\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            getDataFunc={getProviders}\r\n            valueById={providerById}\r\n            getByIdFunc={getProviderById}\r\n            createFunc={createProvider}\r\n            updateFunc={updateProvider}\r\n            clearFunc={clearProvider}\r\n            deleteFunc={deleteProvider}\r\n            isLoading={props.providerFetchLoader}\r\n            hasData={props.hasProvider}\r\n            clearTable = {props.clearProviders}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        providers: state.provider.providers,\r\n        providerById: state.provider.providerById,\r\n        providerFetchLoader: state.provider.providerFetchLoader,\r\n        hasProvider: state.provider.hasProvider\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getProviders,\r\n        getProviderById,\r\n        createProvider,\r\n        updateProvider,\r\n        deleteProvider,\r\n        clearProvider,clearProviders\r\n    }\r\n)(ProvidersPage)\r\n","import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img src={checkPasSVG} alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PasswordInput from \"../Inputs/PasswordInput/PasswordInput\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport {connect} from \"react-redux\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport {writeAuthMessage} from \"../../redux/reducers/mainReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst AuthForm = (props)=>{\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required(),\r\n                password: Yup.string().required(),\r\n            })}\r\n            onSubmit={(values)=>props.submitHandler(values)}\r\n        >\r\n            <Form\r\n                onClick={()=>props.writeAuthMessage('')}\r\n            >\r\n                <Field name=\"username\" placeholder=\"Логин\">\r\n                    {({field:{name},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} />}\r\n                </Field>\r\n                <Field name=\"password\" >\r\n                    {({field:{name},form: { setFieldValue}})=> <PasswordInput setFieldValue={setFieldValue} name={name} placeholder=\"Пароль\"/>}\r\n                </Field>\r\n                {props.authFetchLoader || props.userFetchLoader ? <Preloader /> :\r\n                <button className={\"auth__btn\"} type={'submit'}>Войти</button>\r\n                }\r\n                {props.authErrorMessage && <ErrorMsg text={props.authErrorMessage}/>}\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authErrorMessage: state.main.authErrorMessage,\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeAuthMessage})(AuthForm)","import React from 'react'\r\nimport AuthForm from \"./AuthForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {authSignIn, togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\nconst AuthContainer = ({authSignIn})=>{\r\n\r\n    const submitHandler = (values)=>authSignIn(values)\r\n    return(\r\n        <AuthForm submitHandler={submitHandler}/>\r\n    )\r\n}\r\n\r\nexport default connect(null,{authSignIn})(AuthContainer)","import React from 'react'\r\nimport './AuthPage.css'\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container'>\r\n           <div className=\"auth__block\">\r\n               <div className=\"auth__title\">Авторизация</div>\r\n               <AuthContainer />\r\n           </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","export const recordViewCategoryConfig  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n\r\n        dataIndex: 'imagePath',\r\n        type: 'image'\r\n    },\r\n]","export const CategoryColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n\r\n    },\r\n]","export const categoryInputConfig = [{\r\n    label: \"Название\",\r\n    placeholder: \"Овощи\",\r\n    required: \"Введите название категории\",\r\n\r\n},\r\n    {\r\n        label: \"Описание\",\r\n        placeholder: \"...\",\r\n    },\r\n    {\r\n        label: \"Родительская категория\",\r\n        placeholder: \"Выберите родительскую категорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        nullable: true\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n        dataIndex: 'image',\r\n        type: 'image',\r\n        fileTypes:'image/svg+xml',\r\n    },\r\n]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearCategories,\r\n    clearCategory,\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById, updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {recordViewCategoryConfig} from \"../../configs/Categories/recordViewConfig\";\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/inputFormConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categories,hasCategories,categoryById,getSearchedCategory,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n            recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Создание категории'}\r\n            updaterTitle={'Редактирование категории'}\r\n            formInputsConfig={categoryInputConfig}\r\n            loadSelectorData={[getCategory]}\r\n            clearSelectorData = {[props.clearCategories]}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : []\r\n            }}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                description: '',\r\n                parentCategoryId: null,\r\n                image: ''}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                description: categoryById?.description,\r\n                parentCategoryId: categoryById?.parentCategory?.id ? categoryById.parentCategory.id :  null,\r\n                image:  categoryById?.imagePath\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n            clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n            hasData={hasCategories}\r\n            isLoading={props.categoryFetchLoader}\r\n            clearTable = {props.clearCategories}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById,\r\n        hasCategories: state.category.hasCategories,\r\n        categoryFetchLoader: state.category.categoryFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        clearCategory,\r\n        clearCategories\r\n    }\r\n    )(CategoriesPage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isLoading: state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","import  React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            <div className={'createOrEditContainer__title'}><Link to={props.urlToBack}><img src={backSVG} alt=\"\"/></Link> <h2>{\"Редактирование профиля\"}</h2></div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: props.profile?.firstName,\r\n                    lastName: props.profile?.lastName,\r\n                    middleName: props.profile?.middleName,\r\n                    email: props.profile?.email\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    firstName: Yup.string().nullable(),\r\n                    lastName: Yup.string().nullable(),\r\n                    middleName: Yup.string().nullable(),\r\n                    email: Yup.string().nullable()\r\n                })}\r\n                onSubmit={(values)=>props.handleSubmit(values)}\r\n            >\r\n                {({handleSubmit,errors,values}) => {\r\n\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'firstName'}>Имя\r\n                                <Field name=\"firstName\" placeholder=\"Виктория\"/>\r\n                                <span className='authError'><ErrorMessage name=\"firstName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'lastName'}>Фамилия\r\n                                <Field name=\"lastName\" placeholder=\"Ансимова\"/>\r\n                                <span className='authError'><ErrorMessage name=\"lastName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'middleName'}>Отчество\r\n                                <Field name=\"middleName\" placeholder=\"Викторовна\"/>\r\n                                <span className='authError'><ErrorMessage name=\"middleName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'email'}>E-mail\r\n                                    <Field name=\"email\" placeholder=\"example.com\"/>\r\n                                    <span className='authError'><ErrorMessage name=\"email\"/></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    urlToTable={'providers'}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n                                <CancelBtn\r\n                                    urlToTable={'providers'}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;","import React, {useEffect} from 'react'\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport {getUserById, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst ProfileContainer = (props)=>{\r\n    useEffect(()=>{\r\n        if(props.userId) {\r\n            props.getUserById(props.userId)\r\n        }\r\n    },[props.userId])\r\n    const handleSubmit = values=>props.updateUser(values,localStorage.getItem('id'))\r\n\r\n    return(\r\n        !props.userFetchLoader && !props.authFetchLoader && props.profile   ?\r\n        <ProfileForm {...props} handleSubmit={handleSubmit}/> :\r\n            <Preloader />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        userId: state.main.userId,\r\n        profile: state.user.userById\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateUser,getUserById})(ProfileContainer)","import React from 'react'\r\n\r\nimport ProfileContainer from \"../../components/Profile/ProfileContainer\";\r\n\r\n\r\n\r\n\r\nconst ProfilePage = ()=>{\r\n\r\n    return(\r\n    <ProfileContainer urlToBack={'/providers'}/>\r\n    )\r\n}\r\n\r\nexport  default ProfilePage","import {\r\n    WRITE_FAQ,\r\n    WRITE_FAQ_BY_ID,\r\n    SEARCHING, FAQ_TOGGLE_FETCH_LOADER, DELETED_FAQ, CLEAR_FAQ\r\n} from './types'\r\nimport {\r\n    faqDelByIdReq,\r\n    faqGetByIdReq,\r\n    faqGetReq,\r\n    faqPostReq,\r\n    faqUpdReq\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\n\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    faq: [],\r\n    faqById: {},\r\n    hasFaq: true,\r\n    faqFetchLoader: false\r\n}\r\n\r\n\r\nexport const faqReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case FAQ_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                faqFetchLoader: action.payload\r\n            }\r\n        case WRITE_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: [...state.faq,...action.payload],\r\n                hasFaq: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_FAQ:\r\n            return {\r\n                ...state,\r\n                faq: [],\r\n                hasFaq: true,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                faq: [],\r\n                hasFaq: true\r\n            }\r\n        case WRITE_FAQ_BY_ID:\r\n            return{\r\n                ...state,\r\n                faqById: action.payload\r\n            }\r\n        case DELETED_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: updateItemInStore(state.faq,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearFaqs = ()=>{\r\n    return{\r\n        type: CLEAR_FAQ\r\n    }\r\n}\r\nexport const faqToggleLoader = bool=>{\r\n    return{\r\n        type: FAQ_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getFaq = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, faqGetReq, WRITE_FAQ, faqToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getFaqById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, faqGetByIdReq, WRITE_FAQ_BY_ID, faqToggleLoader,id,toggleNotification)\r\n}\r\nexport const createFaq = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqPostReq,data,faqToggleLoader,'',toggleNotification)\r\n}\r\nexport const deleteFaq = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,faqDelByIdReq,id[i],faqToggleLoader,DELETED_FAQ,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateFaq = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqUpdReq,data,faqToggleLoader,id,toggleNotification)\r\n}\r\nexport const clearFaq = ()=>{\r\n    return{\r\n        type: WRITE_FAQ_BY_ID,\r\n        action: []\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport './pageLoader.css'\r\nimport {loaderLogoSVG} from '../../assets/icons'\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {connect} from \"react-redux\";\r\nimport {Transition,Spring,config} from \"react-spring/renderprops\";\r\nimport {togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\nconst PageLoader = ({isPageLoader})=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"box\" ><img src={loaderLogoSVG}  alt=\"\"/></div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n\r\n        isPageLoader: state.main.isPageLoader,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{togglePageLoader})(PageLoader)","export const faqInputConfig = [{\r\n    label: \"Вопрос\",\r\n    placeholder: \"...\",\r\n    required: \"Введите вопрос\",\r\n    type: 'textarea'\r\n\r\n},\r\n    {\r\n        label: \"Ответ\",\r\n        placeholder: \"...\",\r\n        required: \"Введите ответ\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const FaqColumns  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewFaqConfig  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearFaq,\r\n    clearFaqs,\r\n    createFaq,\r\n    deleteFaq,\r\n    getFaq,\r\n    getFaqById,\r\n    updateFaq\r\n} from \"../../redux/reducers/faqReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {faqInputConfig} from \"../../configs/Faq/inputFormConfig\";\r\nimport {FaqColumns} from \"../../configs/Faq/tableColumnsConfig\";\r\nimport {recordViewFaqConfig} from \"../../configs/Faq/recordViewConfig\";\r\n\r\n\r\nconst FaqPage = props=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'faq'}\r\n            pageTitle ={'FAQ'}\r\n\r\n            tableData={props.faq}\r\n            tableColumnsConfig={FaqColumns}\r\n\r\n            recordViewTitlesConfig={recordViewFaqConfig}\r\n\r\n            creatorTitle={'Создание вопроса-ответа'}\r\n            updaterTitle={'Редактирование вопроса-ответа'}\r\n            formInputsConfig={faqInputConfig}\r\n            creatorInitialFormValues={{\r\n                question: \"\",\r\n                answer: \"\",\r\n                order: \"\"\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                question: props.faqById?.question,\r\n                answer: props.faqById?.answer,\r\n                order: props.faqById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getFaq}\r\n            valueById={props.faqById}\r\n            getByIdFunc={props.getFaqById}\r\n            createFunc={props.createFaq}\r\n            updateFunc={props.updateFaq}\r\n            deleteFunc={props.deleteFaq}\r\n            clearFunc={props.clearFaq}\r\n            isLoading={props.faqFetchLoader}\r\n            hasData={props.hasFaq}\r\n            clearTable = {props.clearFaqs}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        faq: state.faq.faq,\r\n        faqById: state.faq.faqById,\r\n        faqFetchLoader: state.faq.faqFetchLoader,\r\n        hasFaq: state.faq.hasFaq\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getFaq,\r\n        getFaqById,\r\n        createFaq,\r\n        updateFaq,\r\n        deleteFaq,\r\n        clearFaq,clearFaqs\r\n    }\r\n)(FaqPage)\r\n","import {\r\n    WRITE_ABOUT_US,\r\n    WRITE_ABOUT_US_BY_ID,\r\n    DELETED_ABOUT_US,\r\n    SEARCHING, ABOUT_TOGGLE_FETCH_LOADER, WRITE_PRODUCT_BY_ID, CLEAR_CATEGORIES, CLEAR_ABOUT_US\r\n} from './types'\r\nimport {\r\n    aboutUsDelByIdReq,\r\n    aboutUsGetByIdReq,\r\n    aboutUsGetReq,\r\n    aboutUsPostReq,\r\n    aboutUsUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    aboutUs: [],\r\n    aboutUsById: {},\r\n    hasAbout: true,\r\n    aboutFetchLoader: false\r\n}\r\n\r\n\r\nexport const aboutUsReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ABOUT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                aboutFetchLoader: action.payload\r\n            }\r\n        case WRITE_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: [...state.aboutUs,...action.payload],\r\n                hasAbout: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_ABOUT_US:\r\n            return {\r\n                ...state,\r\n                aboutUs: [],\r\n                hasAbout: true,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                aboutUs: [],\r\n                hasAbout: true\r\n            }\r\n        case WRITE_ABOUT_US_BY_ID:\r\n            return{\r\n                ...state,\r\n                aboutUsById: action.payload\r\n            }\r\n        case DELETED_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: updateItemInStore(state.aboutUs,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearAboutUses = ()=>{\r\n    return{\r\n        type: CLEAR_ABOUT_US\r\n    }\r\n}\r\nexport const aboutToggleLoader = bool=>{\r\n    return{\r\n        type: 'ABOUT_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearAboutUs = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getAboutUs = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, aboutUsGetReq, WRITE_ABOUT_US, aboutToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getAboutUsById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, aboutUsGetByIdReq, WRITE_ABOUT_US_BY_ID, aboutToggleLoader,id,toggleNotification)\r\n}\r\nexport const createAboutUs = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsPostReq,data,aboutToggleLoader,'',toggleNotification)\r\n}\r\nexport const deleteAboutUs = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,aboutUsDelByIdReq,id[i],aboutToggleLoader,DELETED_ABOUT_US,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateAboutUs = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsUpdReq,data,aboutToggleLoader,id,toggleNotification)\r\n}\r\n\r\n","export const aboutUsInputConfig = [{\r\n    label: \"Заголовок\",\r\n    placeholder: \"Заголовок...\",\r\n},\r\n    {\r\n        label: \"Параграф\",\r\n        placeholder: \"...\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const AboutUsColumns  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewAboutUsConfig  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearAboutUs, clearAboutUses,\r\n    createAboutUs,\r\n    deleteAboutUs,\r\n    getAboutUs,\r\n    getAboutUsById,\r\n    updateAboutUs\r\n} from \"../../redux/reducers/aboutUsReducer\";\r\nimport {aboutUsInputConfig} from \"../../configs/AboutUs/inputFormConfig\";\r\nimport {AboutUsColumns} from \"../../configs/AboutUs/tableColumnsConfig\";\r\nimport {recordViewAboutUsConfig} from \"../../configs/AboutUs/recordViewConfig\";\r\n\r\n\r\nconst AboutUsPage = props=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'aboutus'}\r\n            pageTitle ={'О нас'}\r\n\r\n            tableData={props.aboutUs}\r\n            tableColumnsConfig={AboutUsColumns}\r\n\r\n            recordViewTitlesConfig={recordViewAboutUsConfig}\r\n\r\n            creatorTitle={'Создание параграфа \"О нас\"'}\r\n            updaterTitle={'Редактирование параграфа \"О нас\"'}\r\n            formInputsConfig={aboutUsInputConfig}\r\n            creatorInitialFormValues={{\r\n                header: '',\r\n                paragraph: '',\r\n                order: ''\r\n            }}\r\n            updaterInitialFormValues={{\r\n\r\n                header: props.aboutUsById?.header,\r\n                paragraph: props.aboutUsById?.paragraph,\r\n                order: props.aboutUsById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getAboutUs}\r\n            valueById={props.aboutUsById}\r\n            getByIdFunc={props.getAboutUsById}\r\n            createFunc={props.createAboutUs}\r\n            updateFunc={props.updateAboutUs}\r\n            deleteFunc={props.deleteAboutUs}\r\n            clearFunc={props.clearAboutUs}\r\n            hasData={props.hasAbout}\r\n            isLoading={props.aboutFetchLoader}\r\n            clearTable = {props.clearAboutUses}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        aboutUs: state.aboutUs.aboutUs,\r\n        aboutUsById: state.aboutUs.aboutUsById,\r\n        aboutFetchLoader: state.aboutUs.aboutFetchLoader,\r\n        hasAbout: state.aboutUs.hasAbout\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getAboutUs,\r\n        getAboutUsById,\r\n        createAboutUs,\r\n        updateAboutUs,\r\n        deleteAboutUs,\r\n        clearAboutUs,clearAboutUses\r\n    }\r\n)(AboutUsPage)\r\n","\r\nexport const settingsInputConfig = [\r\n    {\r\n    label: \"Цена за доставку\",\r\n    placeholder: \"150\",\r\n    required: \"Укажите цену доставки\",\r\n    }\r\n    ]","import React, {useEffect} from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDeliveryCash, updateDeliveryCash} from \"../../redux/reducers/orderReducer\";\r\nimport {settingsInputConfig} from \"../../configs/Settings/inputFormConfig\";\r\n\r\n\r\n\r\nconst SettingsPage  = props=>{\r\n    useEffect(()=>{\r\n        props.getDeliveryCash()\r\n    },[])\r\n    return(\r\n        <>\r\n            <h2 className='page-content__title'>Настройки</h2>\r\n            <FormContainer\r\n                valueById={props.deliveryCash}\r\n                initialVals={{\r\n                    deliveryPrice: props.deliveryCash?.deliveryPrice\r\n                }}\r\n                createReq={props.updateDeliveryCash}\r\n                inputConfig={settingsInputConfig}\r\n                isLoading={props.orderFetchLoader}\r\n                urlToTable={'/settings'}\r\n            />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        deliveryCash: state.order.deliveryCash\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateDeliveryCash,getDeliveryCash})(SettingsPage)","import React from 'react'\r\nimport {  notification } from 'antd';\r\nimport {connect} from \"react-redux\";\r\nimport './Notification.css'\r\nconst Notification = props =>{\r\n    const key = 'updatable';\r\n    const openNotification = () => {\r\n        notification.open({\r\n            key,\r\n            message: props.notification.title,\r\n            description: props.notification.body,\r\n        });\r\n        setTimeout(() => {\r\n            notification.open({\r\n                key,\r\n                message: props.notification.title,\r\n                description:  props.notification.body,\r\n            });\r\n        }, 1000);\r\n    };\r\n    return(\r\n        <div>\r\n            { props.notification.isOpen && openNotification()}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        notification: state.main.notification\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Notification)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport OrdersPage from './pages/Orders/OrdersPage';\r\nimport UsersPage from './pages/Users/UsersPage';\r\nimport ProductsPage from './pages/Products/ProductsPage';\r\nimport ProvidersPage from './pages/Providers/ProvidersPage';\r\nimport AuthPage from \"./pages/Auth/AuthPage\";\r\nimport CategoriesPage from \"./pages/Categories/CategoriesPage\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfilePage from \"./pages/Profile/ProfilePage\";\r\nimport {authRefresh, toggleAuth} from \"./redux/reducers/mainReducer\";\r\nimport {getUserById} from \"./redux/reducers/userReducer\";\r\nimport {expChecker} from \"./components/Auth/expChecker\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {logout} from \"./components/Auth/logout\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport PageLoader from \"./components/pageLoader/pageLoader\";\r\nimport FaqPage from \"./pages/Faq/FaqPage\";\r\nimport AboutUsPage from \"./pages/AboutUs/AboutUsPage\";\r\nimport SettingsPage from \"./pages/Settings/SettingsPage\";\r\nimport Notification from \"./components/Notification/Notification\";\r\n\r\nfunction App(props) {\r\n\r\n    useEffect( ()=>{\r\n        if (expChecker()) {                    //проверка на время токена\r\n            props.toggleAuth(true)\r\n            setTimeout(() =>props.toggleAuth(false),expChecker())\r\n        } else if (tokensChecker()) {                            //отправка на новый токен\r\n            const fetch = () => {\r\n                props.authRefresh({\r\n                    accessToken: localStorage.getItem('accessToken'),\r\n                    refreshToken: localStorage.getItem('refreshToken'),\r\n                    username: props.username\r\n                })\r\n            }\r\n           fetch()\r\n        } else {                                                            //выход из аккаунта\r\n            props.toggleAuth(false)\r\n            logout()\r\n            props.history.push('/')\r\n        }\r\n    },[props.isAuthorized])\r\n\r\n  return(\r\n            <>\r\n                {props.modal.isOpen && <Modal/>}\r\n\r\n                  {props.isAuthorized ?\r\n                      <>\r\n                          <Notification />\r\n                          <Header/>\r\n                          <div className=\"container\">\r\n                              <SidebarList/>\r\n                              <div className=\"page-content\">\r\n                                  <Switch>\r\n                                      <Route path={'/orders'} component={OrdersPage}/>\r\n                                      <Route path={'/users'} component={UsersPage}/>\r\n                                      <Route path={'/products'} component={ProductsPage}/>\r\n                                      <Route path={'/categories'} component={CategoriesPage}/>\r\n                                      <Route path={'/providers'} component={ProvidersPage}/>\r\n                                      <Route path={'/profile'} exact component={ProfilePage}/>\r\n                                      <Route path={'/faq'}  component={FaqPage}/>\r\n                                      <Route path={'/aboutus'}  component={AboutUsPage}/>\r\n                                      <Route path={'/settings'}  component={SettingsPage}/>\r\n                                  </Switch>\r\n                              </div>\r\n                          </div>\r\n                      </>\r\n                      :\r\n                      <>\r\n                          <Switch>\r\n                              <Route path={'/'} exact component={AuthPage}/>\r\n                          </Switch>\r\n\r\n                      </>\r\n                  }\r\n             </>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        visible : state.modal.isOpenModal.isOpen,\r\n        isAuthorized: state.main.isAuthorized,\r\n        isPageLoader: state.main.isPageLoader,\r\n        userById: state.user.userById,\r\n        providerById: state.provider.providerById,\r\n        productById: state.product.productById,\r\n        categoryById: state.category.categoryById,\r\n        categories: state.category.categories,\r\n        users: state.user.users,\r\n        products: state.product.products,\r\n        providers: state.provider.providers,\r\n        isLoading : state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal,\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserById,authRefresh})(withRouter(App));\r\n","export const tokensChecker = ()=>{\r\n    const accessToken = localStorage.getItem('accessToken')\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    if(refreshToken && accessToken){\r\n        return true\r\n    }\r\n    return false\r\n}","import { combineReducers } from \"redux\";\r\nimport {tableReducer} from \"./tableReducer\";\r\nimport {modalReducer} from \"./modalReducer\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {productReducer} from \"./productReducer\";\r\nimport {providerReducer} from \"./providerReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {orderReducer} from \"./orderReducer\";\r\nimport {aboutUsReducer} from \"./aboutUsReducer\";\r\nimport {faqReducer} from \"./faqReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    main: mainReducer,\r\n    table: tableReducer,\r\n    modal: modalReducer,\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    provider: providerReducer,\r\n    user:userReducer,\r\n    order: orderReducer,\r\n    faq: faqReducer,\r\n    aboutUs: aboutUsReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport {rootReducer} from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk,\r\n        ),\r\n      //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}